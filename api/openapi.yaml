openapi: 3.0.1
info:
  description: |-
    Here's our story,

    It all began with the frustration of using software that sucks. Prior to starting Keka, our core team was a 100 person business that needed an easy to use software for managing employees. We looked everywhere and all we found were software that was lousy and hard to use. We felt SME businesses in India deserved something better. Something awesome actually!

    Thus emerged Keka!
  title: Requisition
  version: v1
  x-api-status-urls: false
  x-konfig-has-globally-required-security: true
servers:
- description: Production server (uses live data)
  url: "https://{company}.{environment}.com/api/v1"
  variables:
    environment:
      default: keka
      enum:
      - keka
      - kekademo
      x-konfig-original-example: keka
      x-konfig-generated-schema: konfig-generated-schema-servers-0-variables-environment
security:
- oauth2: []
tags:
- name: Jobs
- name: Employees
- name: Projects
- name: PayCycles
- name: Clients
- name: Tasks
- name: TalentPool
- name: Groups
- name: LeaveRequests
- name: ProjectPhases
- name: Goal
- name: Praise
- name: Departments
- name: Locations
- name: JobTitle
- name: Currency
- name: NoticePeriod
- name: LeaveTypes
- name: LeaveBalance
- name: Attendance
- name: AttendanceCaptureScheme
- name: HolidayCalendar
- name: SalaryComponents
- name: PayGroups
- name: PayGrades
- name: PayBands
- name: TimesheetEntries
- name: TimeFrames
- name: Badge
- name: ExpenseCategory
- name: Expense
- name: ExpensePolicy
- name: Asset
- name: AssetType
- name: AssetCategory
- name: AssetCondition
- name: RequisitionRequest
- name: Authentication
paths:
  /connect/token:
    post:
      deprecated: false
      description: "Use this API to fetch access token by passing authentication parameters\
        \ ( grant_type, scope, client_id, client_secret, api_key) as form-url encoded\
        \ in the body."
      operationId: Authentication_getAccessToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticationGetAccessTokenRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "access_token": "eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ",
                        "expires_in": 86400,
                        "token_type": "Bearer",
                        "scope": "kekaapi"
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetAccessTokenResponse'
          description: "200"
        "400":
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "error": "unsupported_grant_type"
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetAccessToken400Response'
          description: "400"
          x-do-not-generate: true
      summary: Generate Access Token
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--connect-token
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /hris/employees:
    get:
      description: Gets all employees / the specified employees based on employee
        search parameters.
      operationId: Employees_getAll
      parameters:
      - description: Comma separated list of one or more Employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of one or more Employee numbers you'd like
          to filter on.
        explode: true
        in: query
        name: employeeNumbers
        required: false
        schema:
          type: string
        style: form
      - description: "Comma separated list of one or more Employment Status you'd\
          \ like to filter on, allowed values are Working, Relieved."
        explode: true
        in: query
        name: employmentStatus
        required: false
        schema:
          type: string
        style: form
      - description: Fetches employees who are in probation. The allowed value is
          true or false.
        explode: true
        in: query
        name: inProbation
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--hris-employees-get-parameters-3-schema
        style: form
      - description: Fetches employees who are in notice period. The allowed value
          is true or false.
        explode: true
        in: query
        name: inNoticePeriod
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--hris-employees-get-parameters-4-schema
        style: form
      - description: "Date/time when this time off request was last modified, in ISO\
          \ 8601 format (YYYY-MM-DDThh:mm:ssÂ±hh:mm)."
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfilePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfilePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Employees
      tags:
      - Employees
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-employees
      x-accepts: application/json
    post:
      description: Create an Employee and returns created employee identifier.
      operationId: Employees_createEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Employee'
        description: The employee.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Create an Employee
      tags:
      - Employees
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--hris-employees
      x-content-type: application/json
      x-accepts: application/json
  /hris/employees/{id}:
    get:
      description: Get an employee with specified identifier.
      operationId: Employees_getById
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
          description: Not Found
          x-do-not-generate: true
      summary: Get an Employee
      tags:
      - Employees
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-employees-id
      x-accepts: application/json
  /hris/employees/{id}/personaldetails:
    put:
      description: Update Employee personal details.
      operationId: Employees_updatePersonalDetails
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
        description: The personal details.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Update Employee personal details
      tags:
      - Employees
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--hris-employees-id-personaldetails
      x-content-type: application/json
      x-accepts: application/json
  /hris/employees/{id}/jobdetails:
    put:
      description: Update employee job details.
      operationId: Employees_updateJobDetails
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
        description: The job details.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Update employee job details
      tags:
      - Employees
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--hris-employees-id-jobdetails
      x-content-type: application/json
      x-accepts: application/json
  /hris/employees/updatefields:
    get:
      operationId: Employees_getAllUpdateFields
      parameters:
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeFieldResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeFieldResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all update fields
      tags:
      - Employees
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-employees-updatefields
      x-accepts: application/json
  /hris/groups:
    get:
      description: Get all Groups
      operationId: Groups_getAll
      parameters:
      - description: Comma separated list of one or more Group Type Ids youâd like
          to filter on.
        explode: true
        in: query
        name: groupTypeIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of one or more System Group Type youâd like
          to filter on.
        explode: true
        in: query
        name: systemGroupTypes
        required: false
        schema:
          type: string
        style: form
      - description: The Last Modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Groups
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-groups
      x-accepts: application/json
  /hris/grouptypes:
    get:
      description: Gets all Group Types.
      operationId: Groups_getAllGroupTypes
      parameters:
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupTypePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupTypePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Group Types
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-grouptypes
      x-accepts: application/json
  /hris/departments:
    get:
      description: Get all departments
      operationId: Departments_getAll
      parameters:
      - explode: true
        in: query
        name: departmentIds
        required: false
        schema:
          type: string
        style: form
      - description: The Last Modified Date.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIDepartmentViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIDepartmentViewPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all departments
      tags:
      - Departments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-departments
      x-accepts: application/json
  /hris/locations:
    get:
      description: ' Gets all Locations.'
      operationId: Locations_getAll
      parameters:
      - description: The Last Modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LocationPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Locations
      tags:
      - Locations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-locations
      x-accepts: application/json
  /hris/jobtitles:
    get:
      description: Get all jobtitles
      operationId: JobTitle_getAll
      parameters:
      - description: The Last Modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTitlePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobTitlePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all jobtitles
      tags:
      - JobTitle
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-jobtitles
      x-accepts: application/json
  /hris/currencies:
    get:
      description: Get all currencies
      operationId: Currency_getAll
      parameters:
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all currencies
      tags:
      - Currency
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-currencies
      x-accepts: application/json
  /hris/noticeperiods:
    get:
      description: Get all noticeperiods
      operationId: NoticePeriod_getAll
      parameters:
      - description: The notice period ids.
        explode: true
        in: query
        name: noticePeriodIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get all noticeperiods
      tags:
      - NoticePeriod
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--hris-noticeperiods
      x-accepts: application/json
  /time/leavetypes:
    get:
      description: Get all Leave Types
      operationId: LeaveTypes_listAll
      parameters:
      - description: Comma separated list of one or more leave type identifiers you'd
          like to filter on..
        explode: true
        in: query
        name: leaveTypeIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LeaveTypePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Leave Types
      tags:
      - LeaveTypes
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--time-leavetypes
      x-accepts: application/json
  /time/leavebalance:
    get:
      description: Get all the leave balances
      operationId: LeaveBalance_getAllBalances
      parameters:
      - description: The employee ids.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - description: The leave type ids.
        explode: true
        in: query
        name: leaveTypeIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeLeaveBalanceListItemPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeLeaveBalanceListItemPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Leave balances
      tags:
      - LeaveBalance
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--time-leavebalance
      x-accepts: application/json
  /time/leaverequests:
    get:
      description: "Get all the leaves in the organization between `from` and `to`\
        \ date.If both `from` and `to` are not specified, last 30 days records are\
        \ returned.`from` date should be before `to` date.The difference between `from`\
        \ and `to` date cannot be more than **90** days."
      operationId: LeaveRequests_getAllBetweenDates
      parameters:
      - description: Comma separated list of one or more Employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - description: From date.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: To date.
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Leave Requests
      tags:
      - LeaveRequests
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--time-leaverequests
      x-accepts: application/json
    post:
      description: Create an leave request and returns leave request identifier.
      operationId: LeaveRequests_createRequestIdentifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
        description: The leave request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Create an Leave Request
      tags:
      - LeaveRequests
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--time-leaverequests
      x-content-type: application/json
      x-accepts: application/json
  /time/attendance:
    get:
      description: "Gets all Attendance records between date range `from` and `to`.If\
        \ both `from` and `to` are not specified, last 30 days records are returned.From\
        \ `date` should be before `to` date.The difference between `from` and `to`\
        \ date cannot be more than **90** days."
      operationId: Attendance_getRecordsInRange
      parameters:
      - description: Comma separated list of one or more Employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - description: Date from records to retrieve. If not specified defaults to `to
          - 30` days.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Date to records can be retrieved. If not specified defaults to
          `today`.
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSummaryPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get all Attendance Records
      tags:
      - Attendance
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--time-attendance
      x-accepts: application/json
  /time/capturescheme:
    get:
      description: Get all captureschemes
      operationId: AttendanceCaptureScheme_getAll
      parameters:
      - description: The capturescheme ids.
        explode: true
        in: query
        name: captureschemeIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get all captureschemes
      tags:
      - AttendanceCaptureScheme
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--time-capturescheme
      x-accepts: application/json
  /time/holidayscalendar:
    get:
      description: Get all holidays Calendar
      operationId: HolidayCalendar_getAllHolidaysCalendar
      parameters:
      - description: The holidaysCalendar ids.
        explode: true
        in: query
        name: holidaysCalendarIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get all holidays Calendar
      tags:
      - HolidayCalendar
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--time-holidayscalendar
      x-accepts: application/json
  /payroll/salarycomponents:
    get:
      description: Gets all the salary components.
      operationId: SalaryComponents_getAllComponents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISalaryComponentPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APISalaryComponentPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Salary Components
      tags:
      - SalaryComponents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-salarycomponents
      x-accepts: application/json
  /payroll/paygroups:
    get:
      description: Gets all Pay Groups.
      operationId: PayGroups_getAll
      parameters:
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPayGroupViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPayGroupViewPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Pay Groups
      tags:
      - PayGroups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-paygroups
      x-accepts: application/json
  /payroll/paygroups/{payGroupId}/paycycles:
    get:
      operationId: PayCycles_getAll
      parameters:
      - description: The Pay Group Id
        explode: false
        in: path
        name: payGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: "Comma separated list of one or more run Status you'd like to\
          \ filter on, allowed values are Pending, Finalized, Partial."
        explode: true
        in: query
        name: runStatus
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPayCycleViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPayCycleViewPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Pay Cycles
      tags:
      - PayCycles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles
      x-accepts: application/json
  /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/payregister:
    get:
      operationId: PayCycles_getPayRegister
      parameters:
      - description: The Pay Group Id
        explode: false
        in: path
        name: payGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: The Pay cycle Id
        explode: false
        in: path
        name: payCycleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPayRegisterViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPayRegisterViewPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get Pay Register
      tags:
      - PayCycles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles-payCycleId-payregister
      x-accepts: application/json
  /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/paybatches:
    get:
      operationId: PayCycles_getPayBatches
      parameters:
      - description: The Pay Group Id
        explode: false
        in: path
        name: payGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: The Pay cycle Id
        explode: false
        in: path
        name: payCycleId
        required: true
        schema:
          type: string
        style: simple
      - description: "Comma separated list of one or more payment Status you'd like\
          \ to filter on, allowed values are UnPaid, Paid."
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BatchPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Pay Batches
      tags:
      - PayCycles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles-payCycleId-paybatches
      x-accepts: application/json
  /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/paybatches/{payBatchId}/payments:
    get:
      description: Gets all payments for the specified pay group Id and pay cycle
        Id and pay batch Id / specified pay group id and pay cycle Id and pay batch
        Id and payment status filter
      operationId: PayCycles_getBatchPayments
      parameters:
      - description: The Pay Group Id
        explode: false
        in: path
        name: payGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: The Pay cycle Id
        explode: false
        in: path
        name: payCycleId
        required: true
        schema:
          type: string
        style: simple
      - description: The Pay Batch Id
        explode: false
        in: path
        name: payBatchId
        required: true
        schema:
          type: string
        style: simple
      - description: "Comma separated list of one or more payment Status you'd like\
          \ to filter on, allowed values are UnPaid, Paid."
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePaymentPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePaymentPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Batch Payments
      tags:
      - PayCycles
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles-payCycleId-paybatches-payBatchId-payments
      x-accepts: application/json
    put:
      description: Update the Payments status.It will allow only 100 bulk transactions
        from that particular batch.
      operationId: PayCycles_updatePaymentsStatus
      parameters:
      - description: The Pay Group Id
        explode: false
        in: path
        name: payGroupId
        required: true
        schema:
          type: string
        style: simple
      - description: The Pay cycle Id
        explode: false
        in: path
        name: payCycleId
        required: true
        schema:
          type: string
        style: simple
      - description: The Pay Batch Id
        explode: false
        in: path
        name: payBatchId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest3'
        description: The Payment Transactions.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Update the Payments status
      tags:
      - PayCycles
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /payroll/paygrades:
    get:
      description: Gets all Pay Grades.
      operationId: PayGrades_getAll
      parameters:
      - description: The paygrade ids.
        explode: true
        in: query
        name: payGradeIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Pay Grades
      tags:
      - PayGrades
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-paygrades
      x-accepts: application/json
  /payroll/paybands:
    get:
      description: Gets all Pay Bands.
      operationId: PayBands_getAll
      parameters:
      - description: The payband ids.
        explode: true
        in: query
        name: payBandIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Pay Bands
      tags:
      - PayBands
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payroll-paybands
      x-accepts: application/json
  /psa/clients:
    get:
      description: Get all clients
      operationId: Clients_getAll
      parameters:
      - description: Comma separated list of one or more employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: clientIds
        required: false
        schema:
          type: string
        style: form
      - description: "Date/time when this time off request was last modified, in ISO\
          \ 8601 format (YYYY-MM-DDThh:mm:ssÂ±hh:mm)."
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClientPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIClientPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all clients
      tags:
      - Clients
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-clients
      x-accepts: application/json
    post:
      description: Create a Client and returns created client identifier.
      operationId: Clients_createClientIdentifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          text/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Client'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Client'
        description: The client.
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Create a Client
      tags:
      - Clients
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--psa-clients
      x-content-type: application/json
      x-accepts: application/json
  /psa/clients/{id}:
    get:
      description: Gets the specified client based on identifier.
      operationId: Clients_getById
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClientResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIClientResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get a client
      tags:
      - Clients
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-clients-id
      x-accepts: application/json
    put:
      description: Update Client Details.
      operationId: Clients_updateDetails
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
        description: The update client.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Update a Client
      tags:
      - Clients
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--psa-clients-id
      x-content-type: application/json
      x-accepts: application/json
  /psa/projects/{projectId}/phases:
    get:
      description: Get project phases.
      operationId: ProjectPhases_getAll
      parameters:
      - description: The project identifier.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: "Date/time when this time off request was last modified, in ISO\
          \ 8601 format (YYYY-MM-DDThh:mm:ssÂ±hh:mm)."
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPhasePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectPhasePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get project phases.
      tags:
      - ProjectPhases
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-projects-projectId-phases
      x-accepts: application/json
    post:
      description: Create a Project Phase and returns created phase identifier
      operationId: ProjectPhases_createPhaseIdentifier
      parameters:
      - description: The project identifier.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the phase.
        explode: true
        in: query
        name: phaseName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Create a Project Phase
      tags:
      - ProjectPhases
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--psa-projects-projectId-phases
      x-accepts: application/json
  /psa/projects:
    get:
      description: Get all projects.
      operationId: Projects_getAll
      parameters:
      - description: Comma separated list of one or more employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: clientIds
        required: false
        schema:
          type: string
        style: form
      - description: "Date/time when this time off request was last modified, in ISO\
          \ 8601 format (YYYY-MM-DDThh:mm:ssÂ±hh:mm)."
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all projects.
      tags:
      - Projects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-projects
      x-accepts: application/json
    post:
      description: Create an Project and returns created project identifier.
      operationId: Projects_createProjectIdentifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          text/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Project'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Project'
        description: The project.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Create a Project
      tags:
      - Projects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--psa-projects
      x-content-type: application/json
      x-accepts: application/json
  /psa/projects/{id}:
    get:
      description: Gets the specified project based on identifier.
      operationId: Projects_getById
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get a project
      tags:
      - Projects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-projects-id
      x-accepts: application/json
    put:
      description: Update Project Details.
      operationId: Projects_updateDetails
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
        description: The update project.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Update a Project
      tags:
      - Projects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--psa-projects-id
      x-content-type: application/json
      x-accepts: application/json
  /psa/projects/{id}/allocations:
    get:
      description: Gets the specified project allocations based on identifier.
      operationId: Projects_getAllocations
      parameters:
      - description: The identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The last modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectAllocationPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectAllocationPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get a project allocations
      tags:
      - Projects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-projects-id-allocations
      x-accepts: application/json
  /psa/projects/{id}/timeentries:
    get:
      description: "Gets the project time entries between selected from and to date\
        \ range.If both `from` and `to` are not specified, last 30 days records are\
        \ returned.From `date` should be before `to` date.The difference between `from`\
        \ and `to` date cannot be more than **90** days."
      operationId: Projects_getTimesheetEntriesBetweenDates
      parameters:
      - description: The project identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Date from records to retrieve. If not specified defaults to `to
          - 30` days.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Date to records can be retrieved. If not specified defaults to
          `today`.
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Comma separated list of one or more Employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get project timesheet entries.
      tags:
      - Projects
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-projects-id-timeentries
      x-accepts: application/json
  /psa/projects/{projectId}/tasks:
    get:
      description: Gets the project tasks.
      operationId: Tasks_getAll
      parameters:
      - description: The project identifier.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: "Date/time when this time off request was last modified, in ISO\
          \ 8601 format (YYYY-MM-DDThh:mm:ssÂ±hh:mm)."
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectTaskPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectTaskPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get project tasks.
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-projects-projectId-tasks
      x-accepts: application/json
    post:
      description: Create project task and returns created task identifier.
      operationId: Tasks_createTaskIdentifier
      parameters:
      - description: The project identifier.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
        description: The project task.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Create a task
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: false
      x-content-type: application/json
      x-accepts: application/json
  /psa/projects/{projectId}/tasks/{taskId}:
    put:
      description: Update project task.
      operationId: Tasks_updateTask
      parameters:
      - description: The project identifier.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: The task identifier.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
        description: The project task.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Update a task
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--psa-projects-projectId-tasks-taskId
      x-content-type: application/json
      x-accepts: application/json
  /psa/projects/{projectId}/tasks/{taskId}/timeentries:
    get:
      description: "Gets the project task time entries between selected from and to\
        \ date range.If both `from` and `to` are not specified, last 30 days records\
        \ are returned.From `date` should be before `to` date.The difference between\
        \ `from` and `to` date cannot be more than **90** days."
      operationId: Tasks_listTimeEntriesBetweenDates
      parameters:
      - description: The project identifier.
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - description: The task identifier.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      - description: Date from records to retrieve. If not specified defaults to `to
          - 30` days.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Date to records can be retrieved. If not specified defaults to
          `today`.
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Comma separated list of one or more Employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get project task time entries.
      tags:
      - Tasks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-projects-projectId-tasks-taskId-timeentries
      x-accepts: application/json
  /psa/timeentries:
    get:
      description: "Gets the time entries between selected from and to date range.If\
        \ both `from` and `to` are not specified, last 30 days records are returned.From\
        \ `date` should be before `to` date.The difference between `from` and `to`\
        \ date cannot be more than **90** days."
      operationId: TimesheetEntries_getBetweenDates
      parameters:
      - description: Date from records to retrieve. If not specified defaults to `to
          - 30` days.
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Date to records can be retrieved. If not specified defaults to
          `today`.
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Comma separated list of one or more Employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of one or more project ids you'd like to
          filter on.
        explode: true
        in: query
        name: projectIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of one or more task ids you'd like to filter
          on.
        explode: true
        in: query
        name: taskIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get project timesheet entries.
      tags:
      - TimesheetEntries
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--psa-timeentries
      x-accepts: application/json
  /pms/timeframes:
    get:
      description: Gets all time frames.
      operationId: TimeFrames_getAll
      parameters:
      - description: Comma separated list of one or more Time Frame ids you'd like
          to filter on.
        explode: true
        in: query
        name: timeFrameIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimeFramePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimeFramePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Gets time frame list.
      tags:
      - TimeFrames
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--pms-timeframes
      x-accepts: application/json
  /pms/goals:
    get:
      description: Gets all goals along with parent goal and child goals
      operationId: Goal_listWithHierarchy
      parameters:
      - description: Comma separated list of one or more Goal ids you'd like to filter
          on.
        explode: true
        in: query
        name: goalIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of one or more Time Frame ids you'd like
          to filter on.
        explode: true
        in: query
        name: timeFrameIds
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of one or more Employee ids you'd like to
          filter on.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - description: "Date/time when goal time period will start, in ISO 8601 format\
          \ (YYYY-MM-DDThh:mm:ssÂ±hh). If not specified  defaults `to` - 60 days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Date/time when goal time period will end, in ISO 8601 format\
          \ (YYYY-MM-DDThh:mm:ssÂ±hh). If not specified  defaults `from` + 60 days."
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGoalPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIGoalPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Gets goal list.
      tags:
      - Goal
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--pms-goals
      x-accepts: application/json
  /pms/goals/{goalId}/progress:
    put:
      description: Update the goal progress
      operationId: Goal_updateProgress
      parameters:
      - description: The goal identifier.
        explode: false
        in: path
        name: goalId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
          text/json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
        description: The update goal progress view.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Update goal progress
      tags:
      - Goal
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--pms-goals-goalId-progress
      x-content-type: application/json
      x-accepts: application/json
  /pms/badges:
    get:
      description: Gets all badge.
      operationId: Badge_getList
      parameters:
      - description: Comma separated list of one or more Badge ids you'd like to filter
          on.
        explode: true
        in: query
        name: badgeIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIBadgePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIBadgePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Gets badge list.
      tags:
      - Badge
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--pms-badges
      x-accepts: application/json
  /pms/praise:
    get:
      description: Gets all employees praises
      operationId: Praise_listEmployeesPraises
      parameters:
      - description: Comma separated list of one or more praise ids you'd like to
          filter on.
        explode: true
        in: query
        name: praiseIds
        required: false
        schema:
          type: string
        style: form
      - description: "Date/time from records to retrieve, in ISO 8601 format (YYYY-MM-DDThh:mm:ssÂ±\
          hh). If not specified defaults to `to - 30` days."
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Date/time to records to retrieve, in ISO 8601 format (YYYY-MM-DDThh:mm:ssÂ±\
          hh). If not specified defaults to `today`."
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPraisePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPraisePagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Gets praise list.
      tags:
      - Praise
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--pms-praise
      x-accepts: application/json
    post:
      description: Add an praise and returns created praise identifier.
      operationId: Praise_createPraiseIdentifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPraise'
          text/json:
            schema:
              $ref: '#/components/schemas/AddPraise'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddPraise'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddPraise'
        description: The praise.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Add Praise
      tags:
      - Praise
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--pms-praise
      x-content-type: application/json
      x-accepts: application/json
  /v1/hire/jobs:
    get:
      description: "Get all Published, Confidential and Archived jobs"
      operationId: Jobs_getAllPublishedJobs
      parameters:
      - explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: JobStatus
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetAllPublishedJobsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetAllPublishedJobs200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get all jobs
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs
      x-accepts: application/json
  /v1/hire/jobs/{jobId}/applicationfields:
    get:
      description: Get job application fields
      operationId: Jobs_getApplicationFields
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetApplicationFieldsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetApplicationFields200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get application fields
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-applicationfields
      x-accepts: application/json
  /v1/hire/jobs/{jobId}/candidates:
    get:
      description: Get active or archived candidates in a specified job
      operationId: Jobs_getCandidates
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: isArchived
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-hire-jobs-jobId-candidates-get-parameters-1-schema
        style: form
      - explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidatesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidates200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get job candidates
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-candidates
      x-accepts: application/json
  /v1/hire/jobs/{jobId}/candidate/{candidateId}:
    put:
      description: Updated the candidate
      operationId: Jobs_updateCandidate
      parameters:
      - explode: false
        in: path
        name: candidateId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsUpdateCandidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsUpdateCandidate200Response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Updated a candidate
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-hire-jobs-jobId-candidate-candidateId
      x-content-type: application/json
      x-accepts: application/json
  /v1/hire/jobs/{jobId}/candidate/{candidateId}/notes:
    post:
      description: Updated the candidate
      operationId: Jobs_addCandidateNote
      parameters:
      - explode: false
        in: path
        name: candidateId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsAddCandidateNoteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsAddCandidateNote200Response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Adds candidate note
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-hire-jobs-jobId-candidate-candidateId-notes
      x-content-type: application/json
      x-accepts: application/json
  /v1/hire/jobs/{jobId}/candidate:
    post:
      description: Post a candidate to a specified job
      operationId: Jobs_postCandidate
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsPostCandidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsPostCandidate200Response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Post a job candidate
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-hire-jobs-jobId-candidate
      x-content-type: application/json
      x-accepts: application/json
  /v1/hire/jobs/{jobId}/candidate/{candidateId}/interviews:
    get:
      description: Get interview scheduled and completed for a job and a candidate
      operationId: Jobs_getCandidateInterviews
      parameters:
      - explode: false
        in: path
        name: candidateId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateInterviewsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateInterviews200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get interview scheduled and completed for a job candidate
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-candidate-candidateId-interviews
      x-accepts: application/json
  /v1/hire/jobs/{jobId}/candidate/{candidateId}/scorecards:
    get:
      description: Get the scorecards which are submitted for a specified job candidate
      operationId: Jobs_getCandidateScorecards
      parameters:
      - explode: false
        in: path
        name: candidateId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateScorecardsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateScorecards200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get scorecard of a specified candidate for a job candidate
      tags:
      - Jobs
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-candidate-candidateId-scorecards
      x-accepts: application/json
  /v1/hire/talentpool:
    get:
      description: Get all active talent pools
      operationId: TalentPool_getAll
      parameters:
      - explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetAllResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetAll200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get all Talent pools
      tags:
      - TalentPool
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-talentpool
      x-accepts: application/json
  /v1/hire/talentpool/{talentPoolId}/applicationfields:
    get:
      description: Get application fields of a specified talent pool
      operationId: TalentPool_getApplicationFields
      parameters:
      - explode: false
        in: path
        name: talentPoolId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetApplicationFieldsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetApplicationFields200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get Talent pool application fields
      tags:
      - TalentPool
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-talentpool-talentPoolId-applicationfields
      x-accepts: application/json
  /v1/hire/talentpool/{talentPoolId}/candidates:
    get:
      description: Get candidates in a specified talent pool
      operationId: TalentPool_getCandidates
      parameters:
      - explode: false
        in: path
        name: talentPoolId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetCandidatesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetCandidates200Response'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Get Talent pool candidates
      tags:
      - TalentPool
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-hire-talentpool-talentPoolId-candidates
      x-accepts: application/json
  /v1/hire/talentpool/{talentPoolId}/candidate:
    post:
      description: Post a candidate to a specified talent pool
      operationId: TalentPool_addCandidate
      parameters:
      - explode: false
        in: path
        name: talentPoolId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest3'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolAddCandidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolAddCandidate200Response'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Post a candidate to a talent pool
      tags:
      - TalentPool
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-hire-talentpool-talentPoolId-candidate
      x-content-type: application/json
      x-accepts: application/json
  /expense/categories:
    get:
      description: Get all Expense Categories
      operationId: ExpenseCategory_getAllCategories
      parameters:
      - description: Comma separated list of one or more  expense categories identifiers
          you'd like to filter on.
        explode: true
        in: query
        name: expenseCategoryIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Expense Categories
      tags:
      - ExpenseCategory
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--expense-categories
      x-accepts: application/json
  /expense/claims:
    get:
      description: Get all Expense Claims
      operationId: Expense_getAllClaims
      parameters:
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseClaimPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseClaimPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Expense Claims
      tags:
      - Expense
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--expense-claims
      x-accepts: application/json
  /expensepolicies:
    get:
      description: Get all expensepolicies
      operationId: ExpensePolicy_listAllExpensePolicies
      parameters:
      - description: The expensepolicy ids.
        explode: true
        in: query
        name: expensepolicyIds
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get all expensepolicies
      tags:
      - ExpensePolicy
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--expensepolicies
      x-accepts: application/json
  /assets:
    get:
      description: Get all Assets
      operationId: Asset_getAll
      parameters:
      - description: The asset ids.
        explode: true
        in: query
        name: assetIds
        required: false
        schema:
          type: string
        style: form
      - description: The employee ids.
        explode: true
        in: query
        name: employeeIds
        required: false
        schema:
          type: string
        style: form
      - description: The asset status.
        explode: true
        in: query
        name: assetStatus
        required: false
        schema:
          type: string
        style: form
      - description: The last modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Assets
      tags:
      - Asset
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--assets
      x-accepts: application/json
  /assets/types:
    get:
      description: Get all Asset Types
      operationId: AssetType_getAll
      parameters:
      - description: The asset type ids.
        explode: true
        in: query
        name: assetTypeIds
        required: false
        schema:
          type: string
        style: form
      - description: The last modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Asset Types
      tags:
      - AssetType
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--assets-types
      x-accepts: application/json
  /assets/categories:
    get:
      description: Get all Asset Categories
      operationId: AssetCategory_getAll
      parameters:
      - description: The asset category ids.
        explode: true
        in: query
        name: assetCategoryIds
        required: false
        schema:
          type: string
        style: form
      - description: The last modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Asset Categories
      tags:
      - AssetCategory
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--assets-categories
      x-accepts: application/json
  /assets/conditions:
    get:
      description: Get all Asset Conditions
      operationId: AssetCondition_getAll
      parameters:
      - description: The asset condition ids.
        explode: true
        in: query
        name: assetConditionIds
        required: false
        schema:
          type: string
        style: form
      - description: The last modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Asset Conditions
      tags:
      - AssetCondition
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--assets-conditions
      x-accepts: application/json
  /requisition/requests:
    get:
      description: Get all Requisition Requests
      operationId: RequisitionRequest_getAll
      parameters:
      - description: The requisition request ids.
        explode: true
        in: query
        name: requisitionRequestIds
        required: false
        schema:
          type: string
        style: form
      - description: The status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: The last modified.
        explode: true
        in: query
        name: lastModified
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Represents how many results you'd like to retrieve per request
          (page). Default is 100. Max is 200
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionRequestPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RequisitionRequestPagedResponse'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Get all Requisition Requests
      tags:
      - RequisitionRequest
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--requisition-requests
      x-accepts: application/json
components:
  schemas:
    APIBadge:
      example:
        name: name
        description: description
        id: id
        status: null
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/BadgeStatus'
      type: object
    APIBadgeLookup:
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    APIBadgePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - name: name
          description: description
          id: id
          status: null
        - name: name
          description: description
          id: id
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIBadge'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIBaseGoal:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        departmentId: departmentId
        description: description
        employeeId: employeeId
        type: null
        tags:
        - tags
        - tags
        employeeNumber: employeeNumber
        metricType: null
        name: name
        targetValue: 2.3021358869347655
        progress: 9.301444243932576
        id: id
        timeFrameId: timeFrameId
        initialValue: 5.637376656633329
        startDate: 2000-01-23T04:56:07.000+00:00
        currentValue: 7.061401241503109
        status: null
      properties:
        tags:
          items:
            type: string
          nullable: true
          type: array
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        employeeId:
          nullable: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        timeFrameId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        initialValue:
          format: double
          type: number
        targetValue:
          format: double
          type: number
        currentValue:
          format: double
          type: number
        progress:
          format: double
          type: number
        metricType:
          $ref: '#/components/schemas/GoalMetricType'
        status:
          $ref: '#/components/schemas/GoalStatus'
        type:
          $ref: '#/components/schemas/GoalType'
        departmentId:
          nullable: true
          type: string
      type: object
    APIClient:
      example:
        code: code
        additionalFields:
        - id: id
          title: title
          value: value
        - id: id
          title: title
          value: value
        clientContacts:
        - clientId: clientId
          phone: phone
          name: name
          email: email
        - clientId: clientId
          phone: phone
          name: name
          email: email
        name: name
        description: description
        id: id
        billingAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
        clientContacts:
          items:
            $ref: '#/components/schemas/APIClientContact'
          nullable: true
          type: array
        additionalFields:
          items:
            $ref: '#/components/schemas/PSACustomField'
          nullable: true
          type: array
      type: object
    APIClientContact:
      example:
        clientId: clientId
        phone: phone
        name: name
        email: email
      properties:
        clientId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
      type: object
    APIClientPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - code: code
          additionalFields:
          - id: id
            title: title
            value: value
          - id: id
            title: title
            value: value
          clientContacts:
          - clientId: clientId
            phone: phone
            name: name
            email: email
          - clientId: clientId
            phone: phone
            name: name
            email: email
          name: name
          description: description
          id: id
          billingAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
        - code: code
          additionalFields:
          - id: id
            title: title
            value: value
          - id: id
            title: title
            value: value
          clientContacts:
          - clientId: clientId
            phone: phone
            name: name
            email: email
          - clientId: clientId
            phone: phone
            name: name
            email: email
          name: name
          description: description
          id: id
          billingAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIClient'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIClientResponse:
      description: class represents response.
      example:
        data:
          code: code
          additionalFields:
          - id: id
            title: title
            value: value
          - id: id
            title: title
            value: value
          clientContacts:
          - clientId: clientId
            phone: phone
            name: name
            email: email
          - clientId: clientId
            phone: phone
            name: name
            email: email
          name: name
          description: description
          id: id
          billingAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          $ref: '#/components/schemas/APIClient'
      type: object
      x-konfig-is-used-in-successful-response: true
    APIDepartmentView:
      example:
        isArchived: true
        departmentHeads:
        - firstName: firstName
          lastName: lastName
          id: id
          email: email
        - firstName: firstName
          lastName: lastName
          id: id
          email: email
        name: name
        description: description
        id: id
        parentId: parentId
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        parentId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        isArchived:
          type: boolean
        departmentHeads:
          items:
            $ref: '#/components/schemas/EmployeeLookup'
          nullable: true
          type: array
      type: object
    APIDepartmentViewPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - isArchived: true
          departmentHeads:
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          name: name
          description: description
          id: id
          parentId: parentId
        - isArchived: true
          departmentHeads:
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          name: name
          description: description
          id: id
          parentId: parentId
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIDepartmentView'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIEmployeeLookup:
      example:
        employeeName: employeeName
        id: id
        employeeNumber: employeeNumber
      properties:
        id:
          nullable: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        employeeName:
          nullable: true
          type: string
      type: object
    APIEmployeeSalary:
      properties:
        id:
          nullable: true
          type: string
        employee:
          $ref: '#/components/schemas/APIEmployeeLookup'
        ctc:
          format: double
          type: number
        gross:
          format: double
          type: number
        remunerationType:
          $ref: '#/components/schemas/RemunerationType'
        effectiveFrom:
          format: date-time
          type: string
        earnings:
          items:
            $ref: '#/components/schemas/APIEmployeeSalaryComponent'
          nullable: true
          type: array
        deductions:
          items:
            $ref: '#/components/schemas/APIEmployeeSalaryComponent'
          nullable: true
          type: array
      type: object
    APIEmployeeSalaryComponent:
      properties:
        title:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        amount:
          format: double
          type: number
      type: object
    APIEmployeeSalaryPagedResponse:
      description: class represents paged response.
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIEmployeeSalary'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
    APIGoal:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        departmentId: departmentId
        description: description
        employeeId: employeeId
        isPrivate: true
        type: null
        tags:
        - tags
        - tags
        employeeNumber: employeeNumber
        metricType: null
        childGoals:
        - endDate: 2000-01-23T04:56:07.000+00:00
          departmentId: departmentId
          description: description
          employeeId: employeeId
          type: null
          tags:
          - tags
          - tags
          employeeNumber: employeeNumber
          metricType: null
          name: name
          targetValue: 2.3021358869347655
          progress: 9.301444243932576
          id: id
          timeFrameId: timeFrameId
          initialValue: 5.637376656633329
          startDate: 2000-01-23T04:56:07.000+00:00
          currentValue: 7.061401241503109
          status: null
        - endDate: 2000-01-23T04:56:07.000+00:00
          departmentId: departmentId
          description: description
          employeeId: employeeId
          type: null
          tags:
          - tags
          - tags
          employeeNumber: employeeNumber
          metricType: null
          name: name
          targetValue: 2.3021358869347655
          progress: 9.301444243932576
          id: id
          timeFrameId: timeFrameId
          initialValue: 5.637376656633329
          startDate: 2000-01-23T04:56:07.000+00:00
          currentValue: 7.061401241503109
          status: null
        name: name
        targetValue: 6.027456183070403
        progress: 5.962133916683182
        parentGoal:
          endDate: 2000-01-23T04:56:07.000+00:00
          departmentId: departmentId
          description: description
          employeeId: employeeId
          type: null
          tags:
          - tags
          - tags
          employeeNumber: employeeNumber
          metricType: null
          name: name
          targetValue: 2.3021358869347655
          progress: 9.301444243932576
          id: id
          timeFrameId: timeFrameId
          initialValue: 5.637376656633329
          startDate: 2000-01-23T04:56:07.000+00:00
          currentValue: 7.061401241503109
          status: null
        id: id
        timeFrameId: timeFrameId
        initialValue: 0.8008281904610115
        startDate: 2000-01-23T04:56:07.000+00:00
        currentValue: 1.4658129805029452
        status: null
      properties:
        tags:
          items:
            type: string
          nullable: true
          type: array
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        employeeId:
          nullable: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        timeFrameId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        initialValue:
          format: double
          type: number
        targetValue:
          format: double
          type: number
        currentValue:
          format: double
          type: number
        progress:
          format: double
          type: number
        metricType:
          $ref: '#/components/schemas/GoalMetricType'
        status:
          $ref: '#/components/schemas/GoalStatus'
        type:
          $ref: '#/components/schemas/GoalType'
        departmentId:
          nullable: true
          type: string
        parentGoal:
          $ref: '#/components/schemas/APIBaseGoal'
        childGoals:
          items:
            $ref: '#/components/schemas/APIBaseGoal'
          nullable: true
          type: array
        isPrivate:
          type: boolean
      type: object
    APIGoalPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 7
        pageNumber: 3
        previousPage: https://openapi-generator.tech
        data:
        - endDate: 2000-01-23T04:56:07.000+00:00
          departmentId: departmentId
          description: description
          employeeId: employeeId
          isPrivate: true
          type: null
          tags:
          - tags
          - tags
          employeeNumber: employeeNumber
          metricType: null
          childGoals:
          - endDate: 2000-01-23T04:56:07.000+00:00
            departmentId: departmentId
            description: description
            employeeId: employeeId
            type: null
            tags:
            - tags
            - tags
            employeeNumber: employeeNumber
            metricType: null
            name: name
            targetValue: 2.3021358869347655
            progress: 9.301444243932576
            id: id
            timeFrameId: timeFrameId
            initialValue: 5.637376656633329
            startDate: 2000-01-23T04:56:07.000+00:00
            currentValue: 7.061401241503109
            status: null
          - endDate: 2000-01-23T04:56:07.000+00:00
            departmentId: departmentId
            description: description
            employeeId: employeeId
            type: null
            tags:
            - tags
            - tags
            employeeNumber: employeeNumber
            metricType: null
            name: name
            targetValue: 2.3021358869347655
            progress: 9.301444243932576
            id: id
            timeFrameId: timeFrameId
            initialValue: 5.637376656633329
            startDate: 2000-01-23T04:56:07.000+00:00
            currentValue: 7.061401241503109
            status: null
          name: name
          targetValue: 6.027456183070403
          progress: 5.962133916683182
          parentGoal:
            endDate: 2000-01-23T04:56:07.000+00:00
            departmentId: departmentId
            description: description
            employeeId: employeeId
            type: null
            tags:
            - tags
            - tags
            employeeNumber: employeeNumber
            metricType: null
            name: name
            targetValue: 2.3021358869347655
            progress: 9.301444243932576
            id: id
            timeFrameId: timeFrameId
            initialValue: 5.637376656633329
            startDate: 2000-01-23T04:56:07.000+00:00
            currentValue: 7.061401241503109
            status: null
          id: id
          timeFrameId: timeFrameId
          initialValue: 0.8008281904610115
          startDate: 2000-01-23T04:56:07.000+00:00
          currentValue: 1.4658129805029452
          status: null
        - endDate: 2000-01-23T04:56:07.000+00:00
          departmentId: departmentId
          description: description
          employeeId: employeeId
          isPrivate: true
          type: null
          tags:
          - tags
          - tags
          employeeNumber: employeeNumber
          metricType: null
          childGoals:
          - endDate: 2000-01-23T04:56:07.000+00:00
            departmentId: departmentId
            description: description
            employeeId: employeeId
            type: null
            tags:
            - tags
            - tags
            employeeNumber: employeeNumber
            metricType: null
            name: name
            targetValue: 2.3021358869347655
            progress: 9.301444243932576
            id: id
            timeFrameId: timeFrameId
            initialValue: 5.637376656633329
            startDate: 2000-01-23T04:56:07.000+00:00
            currentValue: 7.061401241503109
            status: null
          - endDate: 2000-01-23T04:56:07.000+00:00
            departmentId: departmentId
            description: description
            employeeId: employeeId
            type: null
            tags:
            - tags
            - tags
            employeeNumber: employeeNumber
            metricType: null
            name: name
            targetValue: 2.3021358869347655
            progress: 9.301444243932576
            id: id
            timeFrameId: timeFrameId
            initialValue: 5.637376656633329
            startDate: 2000-01-23T04:56:07.000+00:00
            currentValue: 7.061401241503109
            status: null
          name: name
          targetValue: 6.027456183070403
          progress: 5.962133916683182
          parentGoal:
            endDate: 2000-01-23T04:56:07.000+00:00
            departmentId: departmentId
            description: description
            employeeId: employeeId
            type: null
            tags:
            - tags
            - tags
            employeeNumber: employeeNumber
            metricType: null
            name: name
            targetValue: 2.3021358869347655
            progress: 9.301444243932576
            id: id
            timeFrameId: timeFrameId
            initialValue: 5.637376656633329
            startDate: 2000-01-23T04:56:07.000+00:00
            currentValue: 7.061401241503109
            status: null
          id: id
          timeFrameId: timeFrameId
          initialValue: 0.8008281904610115
          startDate: 2000-01-23T04:56:07.000+00:00
          currentValue: 1.4658129805029452
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 4
        pageSize: 2
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIGoal'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APILookup:
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    APIPayCycleView:
      example:
        identifier: identifier
        month: month
        endDate: endDate
        startDate: startDate
        runStatus: null
      properties:
        identifier:
          nullable: true
          type: string
        month:
          nullable: true
          type: string
        startDate:
          nullable: true
          type: string
        endDate:
          nullable: true
          type: string
        runStatus:
          $ref: '#/components/schemas/PayrollRunStatus'
      type: object
    APIPayCycleViewPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          month: month
          endDate: endDate
          startDate: startDate
          runStatus: null
        - identifier: identifier
          month: month
          endDate: endDate
          startDate: startDate
          runStatus: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIPayCycleView'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIPayGroupView:
      example:
        identifier: identifier
        legalEntityId: legalEntityId
        name: name
        description: description
        legalEntityName: legalEntityName
      properties:
        description:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        legalEntityId:
          nullable: true
          type: string
        legalEntityName:
          nullable: true
          type: string
      type: object
    APIPayGroupViewPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          legalEntityId: legalEntityId
          name: name
          description: description
          legalEntityName: legalEntityName
        - identifier: identifier
          legalEntityId: legalEntityId
          name: name
          description: description
          legalEntityName: legalEntityName
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIPayGroupView'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIPayRegisterView:
      example:
        workerType: null
        businessUnit: businessUnit
        totalReimbursements: 1.0246457001441578
        gender: null
        cycleMonth: 0
        workingDays: 5.962133916683182
        dateJoined: 2000-01-23T04:56:07.000+00:00
        jobTitle: jobTitle
        employmentStatus: null
        deductions:
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        employeeNumber: employeeNumber
        cycleIdentifier: cycleIdentifier
        total: 4.145608029883936
        contributions:
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        renumerationAmount: 7.061401241503109
        cycleFrom: 2000-01-23T04:56:07.000+00:00
        department: department
        exitDate: 2000-01-23T04:56:07.000+00:00
        outsideGrossPayables:
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        identifier: identifier
        employeeName: employeeName
        totalContributions: 7.386281948385884
        cashAdvanceSettlementAmount: 6.84685269835264
        netAmount: 7.457744773683766
        costCenter: costCenter
        totalDeductions: 1.2315135367772556
        cycleTo: 2000-01-23T04:56:07.000+00:00
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        reimbursements:
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        panNumber: panNumber
        grossAmount: 3.616076749251911
        payGroup: payGroup
        remunerationType: null
        cyclePayDays: 1.4658129805029452
        cycleYear: 6
        noOfPayDays: 2.3021358869347655
        statusDescription: statusDescription
        earnings:
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        - amount: 9.301444243932576
          accountingCode: accountingCode
          componentTitle: componentTitle
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          componentIdentifier: componentIdentifier
        cycleMonthName: cycleMonthName
        location: location
        lossOfPayDays: 5.637376656633329
        totalOutsideGrossAmount: 2.027123023002322
        status: null
        cashAdvanceAmount: 1.4894159098541704
      properties:
        identifier:
          nullable: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        employeeName:
          nullable: true
          type: string
        panNumber:
          nullable: true
          type: string
        dateJoined:
          format: date-time
          nullable: true
          type: string
        jobTitle:
          nullable: true
          type: string
        department:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        payGroup:
          nullable: true
          type: string
        employmentStatus:
          $ref: '#/components/schemas/EmploymentStatus'
        workerType:
          $ref: '#/components/schemas/WorkerType'
        costCenter:
          nullable: true
          type: string
        businessUnit:
          nullable: true
          type: string
        remunerationType:
          $ref: '#/components/schemas/RemunerationType'
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          format: date-time
          nullable: true
          type: string
        exitDate:
          format: date-time
          nullable: true
          type: string
        cycleIdentifier:
          nullable: true
          type: string
        cycleFrom:
          format: date-time
          type: string
        cycleTo:
          format: date-time
          type: string
        cycleMonthName:
          nullable: true
          readOnly: true
          type: string
        cycleMonth:
          format: int32
          type: integer
        cycleYear:
          format: int32
          type: integer
        cyclePayDays:
          format: double
          type: number
        workingDays:
          format: double
          type: number
        lossOfPayDays:
          format: double
          type: number
        noOfPayDays:
          format: double
          type: number
        renumerationAmount:
          format: double
          nullable: true
          type: number
        status:
          $ref: '#/components/schemas/EmployeePayrollCycleRunStatus'
        statusDescription:
          nullable: true
          type: string
        earnings:
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
          type: array
        contributions:
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
          type: array
        deductions:
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
          type: array
        reimbursements:
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
          type: array
        outsideGrossPayables:
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
          type: array
        grossAmount:
          format: double
          type: number
        totalOutsideGrossAmount:
          format: double
          type: number
        total:
          format: double
          readOnly: true
          type: number
        totalContributions:
          format: double
          type: number
        totalDeductions:
          format: double
          type: number
        totalReimbursements:
          format: double
          type: number
        cashAdvanceAmount:
          format: double
          type: number
        cashAdvanceSettlementAmount:
          format: double
          type: number
        netAmount:
          format: double
          type: number
      type: object
    APIPayRegisterViewPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 9
        pageNumber: 1
        previousPage: https://openapi-generator.tech
        data:
        - workerType: null
          businessUnit: businessUnit
          totalReimbursements: 1.0246457001441578
          gender: null
          cycleMonth: 0
          workingDays: 5.962133916683182
          dateJoined: 2000-01-23T04:56:07.000+00:00
          jobTitle: jobTitle
          employmentStatus: null
          deductions:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          employeeNumber: employeeNumber
          cycleIdentifier: cycleIdentifier
          total: 4.145608029883936
          contributions:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          renumerationAmount: 7.061401241503109
          cycleFrom: 2000-01-23T04:56:07.000+00:00
          department: department
          exitDate: 2000-01-23T04:56:07.000+00:00
          outsideGrossPayables:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          identifier: identifier
          employeeName: employeeName
          totalContributions: 7.386281948385884
          cashAdvanceSettlementAmount: 6.84685269835264
          netAmount: 7.457744773683766
          costCenter: costCenter
          totalDeductions: 1.2315135367772556
          cycleTo: 2000-01-23T04:56:07.000+00:00
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          reimbursements:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          panNumber: panNumber
          grossAmount: 3.616076749251911
          payGroup: payGroup
          remunerationType: null
          cyclePayDays: 1.4658129805029452
          cycleYear: 6
          noOfPayDays: 2.3021358869347655
          statusDescription: statusDescription
          earnings:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          cycleMonthName: cycleMonthName
          location: location
          lossOfPayDays: 5.637376656633329
          totalOutsideGrossAmount: 2.027123023002322
          status: null
          cashAdvanceAmount: 1.4894159098541704
        - workerType: null
          businessUnit: businessUnit
          totalReimbursements: 1.0246457001441578
          gender: null
          cycleMonth: 0
          workingDays: 5.962133916683182
          dateJoined: 2000-01-23T04:56:07.000+00:00
          jobTitle: jobTitle
          employmentStatus: null
          deductions:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          employeeNumber: employeeNumber
          cycleIdentifier: cycleIdentifier
          total: 4.145608029883936
          contributions:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          renumerationAmount: 7.061401241503109
          cycleFrom: 2000-01-23T04:56:07.000+00:00
          department: department
          exitDate: 2000-01-23T04:56:07.000+00:00
          outsideGrossPayables:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          identifier: identifier
          employeeName: employeeName
          totalContributions: 7.386281948385884
          cashAdvanceSettlementAmount: 6.84685269835264
          netAmount: 7.457744773683766
          costCenter: costCenter
          totalDeductions: 1.2315135367772556
          cycleTo: 2000-01-23T04:56:07.000+00:00
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          reimbursements:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          panNumber: panNumber
          grossAmount: 3.616076749251911
          payGroup: payGroup
          remunerationType: null
          cyclePayDays: 1.4658129805029452
          cycleYear: 6
          noOfPayDays: 2.3021358869347655
          statusDescription: statusDescription
          earnings:
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          - amount: 9.301444243932576
            accountingCode: accountingCode
            componentTitle: componentTitle
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            componentIdentifier: componentIdentifier
          cycleMonthName: cycleMonthName
          location: location
          lossOfPayDays: 5.637376656633329
          totalOutsideGrossAmount: 2.027123023002322
          status: null
          cashAdvanceAmount: 1.4894159098541704
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 5
        pageSize: 4
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIPayRegisterView'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIPraise:
      example:
        feedback: feedback
        badge:
          name: name
          id: id
        givenOn: 2000-01-23T04:56:07.000+00:00
        givenBy:
          employeeName: employeeName
          id: id
          employeeNumber: employeeNumber
        id: id
        employees:
        - employeeName: employeeName
          id: id
          employeeNumber: employeeNumber
        - employeeName: employeeName
          id: id
          employeeNumber: employeeNumber
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        feedback:
          nullable: true
          type: string
        badge:
          $ref: '#/components/schemas/APIBadgeLookup'
        employees:
          items:
            $ref: '#/components/schemas/APIEmployeeLookup'
          nullable: true
          type: array
        givenBy:
          $ref: '#/components/schemas/APIEmployeeLookup'
        givenOn:
          format: date-time
          type: string
      type: object
    APIPraisePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - feedback: feedback
          badge:
            name: name
            id: id
          givenOn: 2000-01-23T04:56:07.000+00:00
          givenBy:
            employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          id: id
          employees:
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
        - feedback: feedback
          badge:
            name: name
            id: id
          givenOn: 2000-01-23T04:56:07.000+00:00
          givenBy:
            employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          id: id
          employees:
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIPraise'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIProject:
      example:
        clientId: clientId
        code: code
        endDate: 2000-01-23T04:56:07.000+00:00
        isArchived: true
        name: name
        projectManagers:
        - firstName: firstName
          lastName: lastName
          id: id
          email: email
        - firstName: firstName
          lastName: lastName
          id: id
          email: email
        id: id
        startDate: 2000-01-23T04:56:07.000+00:00
        status: null
        isBillable: true
        customAttributes:
          key: customAttributes
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        clientId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        projectManagers:
          items:
            $ref: '#/components/schemas/EmployeeLookup'
          nullable: true
          type: array
        isBillable:
          type: boolean
        isArchived:
          type: boolean
        customAttributes:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
      type: object
    APIProjectAllocation:
      example:
        allocationPercentage: 0
        billingRate:
          unit: null
          rate: 6.027456183070403
        endDate: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        employee:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
        startDate: 2000-01-23T04:56:07.000+00:00
        billingRole:
          name: name
          id: id
      properties:
        id:
          format: uuid
          type: string
        employee:
          $ref: '#/components/schemas/EmployeeLookup'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        allocationPercentage:
          format: int32
          type: integer
        billingRole:
          $ref: '#/components/schemas/APILookup'
        billingRate:
          $ref: '#/components/schemas/BillingRateLookup'
      type: object
    APIProjectAllocationPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 2
        pageNumber: 1
        previousPage: https://openapi-generator.tech
        data:
        - allocationPercentage: 0
          billingRate:
            unit: null
            rate: 6.027456183070403
          endDate: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          employee:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          startDate: 2000-01-23T04:56:07.000+00:00
          billingRole:
            name: name
            id: id
        - allocationPercentage: 0
          billingRate:
            unit: null
            rate: 6.027456183070403
          endDate: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          employee:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          startDate: 2000-01-23T04:56:07.000+00:00
          billingRole:
            name: name
            id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 5
        pageSize: 5
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIProjectAllocation'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIProjectPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - clientId: clientId
          code: code
          endDate: 2000-01-23T04:56:07.000+00:00
          isArchived: true
          name: name
          projectManagers:
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          id: id
          startDate: 2000-01-23T04:56:07.000+00:00
          status: null
          isBillable: true
          customAttributes:
            key: customAttributes
        - clientId: clientId
          code: code
          endDate: 2000-01-23T04:56:07.000+00:00
          isArchived: true
          name: name
          projectManagers:
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          id: id
          startDate: 2000-01-23T04:56:07.000+00:00
          status: null
          isBillable: true
          customAttributes:
            key: customAttributes
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIProject'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIProjectResponse:
      description: class represents response.
      example:
        data:
          clientId: clientId
          code: code
          endDate: 2000-01-23T04:56:07.000+00:00
          isArchived: true
          name: name
          projectManagers:
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
          id: id
          startDate: 2000-01-23T04:56:07.000+00:00
          status: null
          isBillable: true
          customAttributes:
            key: customAttributes
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          $ref: '#/components/schemas/APIProject'
      type: object
      x-konfig-is-used-in-successful-response: true
    APIProjectTask:
      example:
        identifier: identifier
        taskType: null
        endDate: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        estimatedHours: 0.8008281904610115
        id: id
        taskBillingType: null
        projectId: projectId
        assignedTo:
        - employeeName: employeeName
          id: id
          employeeNumber: employeeNumber
        - employeeName: employeeName
          id: id
          employeeNumber: employeeNumber
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        projectId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        taskType:
          $ref: '#/components/schemas/TaskType'
        taskBillingType:
          $ref: '#/components/schemas/TaskBillingType'
        assignedTo:
          items:
            $ref: '#/components/schemas/APIEmployeeLookup'
          nullable: true
          type: array
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        estimatedHours:
          format: double
          nullable: true
          type: number
        identifier:
          nullable: true
          type: string
      type: object
    APIProjectTaskPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 6
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          taskType: null
          endDate: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          estimatedHours: 0.8008281904610115
          id: id
          taskBillingType: null
          projectId: projectId
          assignedTo:
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          startDate: 2000-01-23T04:56:07.000+00:00
        - identifier: identifier
          taskType: null
          endDate: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          estimatedHours: 0.8008281904610115
          id: id
          taskBillingType: null
          projectId: projectId
          assignedTo:
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          - employeeName: employeeName
            id: id
            employeeNumber: employeeNumber
          startDate: 2000-01-23T04:56:07.000+00:00
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 5
        pageSize: 1
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIProjectTask'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APISalaryComponent:
      example:
        identifier: identifier
        accountingCode: accountingCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
      properties:
        title:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        identifier:
          nullable: true
          type: string
        accountingCode:
          nullable: true
          type: string
      type: object
    APISalaryComponentPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          accountingCode: accountingCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - identifier: identifier
          accountingCode: accountingCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APISalaryComponent'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APITimeFrame:
      example:
        isClosed: true
        endDate: 2000-01-23T04:56:07.000+00:00
        isLocked: true
        name: name
        id: id
        startDate: 2000-01-23T04:56:07.000+00:00
        frequency: null
        status: null
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        frequency:
          $ref: '#/components/schemas/Frequency'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        isClosed:
          type: boolean
        isLocked:
          type: boolean
        status:
          $ref: '#/components/schemas/TimeFrameStatus'
      type: object
    APITimeFramePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - isClosed: true
          endDate: 2000-01-23T04:56:07.000+00:00
          isLocked: true
          name: name
          id: id
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: null
          status: null
        - isClosed: true
          endDate: 2000-01-23T04:56:07.000+00:00
          isLocked: true
          name: name
          id: id
          startDate: 2000-01-23T04:56:07.000+00:00
          frequency: null
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APITimeFrame'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APITimesheetEntry:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        identifier: identifier
        comments: comments
        totalMinutes: 0.8008281904610115
        employeeId: employeeId
        startTime: startTime
        id: id
        endTime: endTime
        projectId: projectId
        taskId: taskId
        isBillable: true
        status: null
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        date:
          format: date-time
          type: string
        employeeId:
          nullable: true
          type: string
        projectId:
          nullable: true
          type: string
        taskId:
          nullable: true
          type: string
        totalMinutes:
          format: double
          type: number
        startTime:
          nullable: true
          type: string
        endTime:
          nullable: true
          type: string
        comments:
          nullable: true
          type: string
        isBillable:
          type: boolean
        status:
          $ref: '#/components/schemas/TimeEntryStatus'
        identifier:
          nullable: true
          type: string
      type: object
    APITimesheetEntryPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 6
        previousPage: https://openapi-generator.tech
        data:
        - date: 2000-01-23T04:56:07.000+00:00
          identifier: identifier
          comments: comments
          totalMinutes: 0.8008281904610115
          employeeId: employeeId
          startTime: startTime
          id: id
          endTime: endTime
          projectId: projectId
          taskId: taskId
          isBillable: true
          status: null
        - date: 2000-01-23T04:56:07.000+00:00
          identifier: identifier
          comments: comments
          totalMinutes: 0.8008281904610115
          employeeId: employeeId
          startTime: startTime
          id: id
          endTime: endTime
          projectId: projectId
          taskId: taskId
          isBillable: true
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 5
        pageSize: 1
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APITimesheetEntry'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    APIUpdateGoalProgress:
      example:
        note: note
        updatedBy: updatedBy
        currentValue: 0.8008281904610115
        status: null
      properties:
        currentValue:
          format: double
          type: number
        status:
          $ref: '#/components/schemas/GoalStatus'
        updatedBy:
          type: string
        note:
          nullable: true
          type: string
      required:
      - currentValue
      - status
      - updatedBy
      type: object
    AccountStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    AddPraise:
      example:
        feedback: feedback
        employeeIds:
        - employeeIds
        - employeeIds
        badgeId: badgeId
        givenBy: givenBy
      properties:
        employeeIds:
          items:
            type: string
          type: array
        feedback:
          type: string
        badgeId:
          type: string
        givenBy:
          type: string
      required:
      - badgeId
      - employeeIds
      - feedback
      - givenBy
      type: object
    Address:
      example:
        zip: zip
        city: city
        countryCode: countryCode
        addressLine1: addressLine1
        addressLine2: addressLine2
        state: state
      properties:
        addressLine1:
          nullable: true
          type: string
        addressLine2:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        zip:
          nullable: true
          type: string
      type: object
    ApiLookup:
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    ApiLookupPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - name: name
          id: id
        - name: name
          id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/ApiLookup'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Asset:
      example:
        assetConditionId: assetConditionId
        assetTypeId: assetTypeId
        assetId: assetId
        assetCategoryId: assetCategoryId
        assetName: assetName
        assignedOn: 2000-01-23T04:56:07.000+00:00
        id: id
        assignedTo:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
        status: null
      properties:
        id:
          nullable: true
          type: string
        assetName:
          nullable: true
          type: string
        assetId:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/AssetStatus'
        assetCategoryId:
          nullable: true
          type: string
        assetTypeId:
          nullable: true
          type: string
        assetConditionId:
          nullable: true
          type: string
        assignedTo:
          $ref: '#/components/schemas/EmployeeLookup'
        assignedOn:
          format: date-time
          nullable: true
          type: string
      type: object
    AssetPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - assetConditionId: assetConditionId
          assetTypeId: assetTypeId
          assetId: assetId
          assetCategoryId: assetCategoryId
          assetName: assetName
          assignedOn: 2000-01-23T04:56:07.000+00:00
          id: id
          assignedTo:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          status: null
        - assetConditionId: assetConditionId
          assetTypeId: assetTypeId
          assetId: assetId
          assetCategoryId: assetCategoryId
          assetName: assetName
          assignedOn: 2000-01-23T04:56:07.000+00:00
          id: id
          assignedTo:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/Asset'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    AssetStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    AttendanceDayType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    AttendanceSummary:
      example:
        shiftEffectiveDuration: 1.4658129805029452
        totalGrossHours: 5.962133916683182
        totalEffectiveOvertimeDuration: 7.061401241503109
        shiftBreakDuration: 6.027456183070403
        totalEffectiveHours: 5.637376656633329
        lastOutOfTheDay:
          locationAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          timestamp: 2000-01-23T04:56:07.000+00:00
        shiftStartTime: 2000-01-23T04:56:07.000+00:00
        shiftEndTime: 2000-01-23T04:56:07.000+00:00
        firstInOfTheDay:
          locationAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          timestamp: 2000-01-23T04:56:07.000+00:00
        leaveDayStatus: null
        shiftDuration: 0.8008281904610115
        employeeNumber: employeeNumber
        totalGrossOvertimeDuration: 9.301444243932576
        employeeIdentifier: employeeIdentifier
        dayType: null
        totalBreakDuration: 2.3021358869347655
        id: id
        attendanceDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        employeeIdentifier:
          nullable: true
          type: string
        attendanceDate:
          format: date-time
          type: string
        dayType:
          $ref: '#/components/schemas/AttendanceDayType'
        leaveDayStatus:
          $ref: '#/components/schemas/LeaveDayStatus'
        shiftStartTime:
          format: date-time
          type: string
        shiftEndTime:
          format: date-time
          type: string
        shiftDuration:
          format: double
          type: number
        shiftBreakDuration:
          format: double
          type: number
        shiftEffectiveDuration:
          format: double
          type: number
        totalGrossHours:
          format: double
          type: number
        totalEffectiveHours:
          format: double
          type: number
        totalBreakDuration:
          format: double
          type: number
        totalEffectiveOvertimeDuration:
          format: double
          type: number
        totalGrossOvertimeDuration:
          format: double
          type: number
        firstInOfTheDay:
          $ref: '#/components/schemas/AttendanceTimeEntry'
        lastOutOfTheDay:
          $ref: '#/components/schemas/AttendanceTimeEntry'
      type: object
    AttendanceSummaryPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 7
        pageNumber: 3
        previousPage: https://openapi-generator.tech
        data:
        - shiftEffectiveDuration: 1.4658129805029452
          totalGrossHours: 5.962133916683182
          totalEffectiveOvertimeDuration: 7.061401241503109
          shiftBreakDuration: 6.027456183070403
          totalEffectiveHours: 5.637376656633329
          lastOutOfTheDay:
            locationAddress:
              zip: zip
              city: city
              countryCode: countryCode
              addressLine1: addressLine1
              addressLine2: addressLine2
              state: state
            timestamp: 2000-01-23T04:56:07.000+00:00
          shiftStartTime: 2000-01-23T04:56:07.000+00:00
          shiftEndTime: 2000-01-23T04:56:07.000+00:00
          firstInOfTheDay:
            locationAddress:
              zip: zip
              city: city
              countryCode: countryCode
              addressLine1: addressLine1
              addressLine2: addressLine2
              state: state
            timestamp: 2000-01-23T04:56:07.000+00:00
          leaveDayStatus: null
          shiftDuration: 0.8008281904610115
          employeeNumber: employeeNumber
          totalGrossOvertimeDuration: 9.301444243932576
          employeeIdentifier: employeeIdentifier
          dayType: null
          totalBreakDuration: 2.3021358869347655
          id: id
          attendanceDate: 2000-01-23T04:56:07.000+00:00
        - shiftEffectiveDuration: 1.4658129805029452
          totalGrossHours: 5.962133916683182
          totalEffectiveOvertimeDuration: 7.061401241503109
          shiftBreakDuration: 6.027456183070403
          totalEffectiveHours: 5.637376656633329
          lastOutOfTheDay:
            locationAddress:
              zip: zip
              city: city
              countryCode: countryCode
              addressLine1: addressLine1
              addressLine2: addressLine2
              state: state
            timestamp: 2000-01-23T04:56:07.000+00:00
          shiftStartTime: 2000-01-23T04:56:07.000+00:00
          shiftEndTime: 2000-01-23T04:56:07.000+00:00
          firstInOfTheDay:
            locationAddress:
              zip: zip
              city: city
              countryCode: countryCode
              addressLine1: addressLine1
              addressLine2: addressLine2
              state: state
            timestamp: 2000-01-23T04:56:07.000+00:00
          leaveDayStatus: null
          shiftDuration: 0.8008281904610115
          employeeNumber: employeeNumber
          totalGrossOvertimeDuration: 9.301444243932576
          employeeIdentifier: employeeIdentifier
          dayType: null
          totalBreakDuration: 2.3021358869347655
          id: id
          attendanceDate: 2000-01-23T04:56:07.000+00:00
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 4
        pageSize: 2
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/AttendanceSummary'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    AttendanceTimeEntry:
      example:
        locationAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          format: date-time
          type: string
        locationAddress:
          $ref: '#/components/schemas/Address'
      type: object
    BadgeStatus:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    Batch:
      example:
        paymentFor: paymentFor
        identifier: identifier
        name: name
        description: description
        id: id
        forPeriod: forPeriod
        status: null
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        forPeriod:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        paymentFor:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
      type: object
    BatchPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - paymentFor: paymentFor
          identifier: identifier
          name: name
          description: description
          id: id
          forPeriod: forPeriod
          status: null
        - paymentFor: paymentFor
          identifier: identifier
          name: name
          description: description
          id: id
          forPeriod: forPeriod
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/Batch'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    BillingInfo:
      example:
        billingCurrencyId: billingCurrencyId
        billingAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
      properties:
        billingCurrencyId:
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
      required:
      - billingCurrencyId
      type: object
    BillingRateLookup:
      example:
        unit: null
        rate: 6.027456183070403
      properties:
        unit:
          $ref: '#/components/schemas/BillingRateUnit'
        rate:
          format: double
          type: number
      type: object
    BillingRateUnit:
      enum:
      - 0
      format: int32
      type: integer
    BloodGroup:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      format: int32
      type: integer
    BooleanResponse:
      description: class represents response.
      example:
        data: true
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
      x-konfig-is-used-in-non-successful-response: true
    Client:
      example:
        billingInfo:
          billingCurrencyId: billingCurrencyId
          billingAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
        website: website
        code: code
        phone: phone
        name: name
        description: description
        email: email
      properties:
        description:
          nullable: true
          type: string
        name:
          type: string
        code:
          type: string
        billingInfo:
          $ref: '#/components/schemas/BillingInfo'
        phone:
          format: tel
          nullable: true
          type: string
        website:
          nullable: true
          type: string
        email:
          format: email
          nullable: true
          type: string
      required:
      - code
      - name
      type: object
    ContingentType:
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    Currency:
      example:
        identifier: identifier
        code: code
        name: name
        id: id
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        code:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
      type: object
    CurrencyPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          code: code
          name: name
          id: id
        - identifier: identifier
          code: code
          name: name
          id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/Currency'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    CustomField:
      example:
        id: id
        title: title
        type: type
        value: value
      properties:
        title:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    Education:
      example:
        university: university
        yearOfCompletion: 2000-01-23T04:56:07.000+00:00
        customFields:
        - id: id
          title: title
          type: type
          value: value
        - id: id
          title: title
          type: type
          value: value
        degree: degree
        id: id
        cgpa: 0.8008281904610115
        yearOfJoining: 2000-01-23T04:56:07.000+00:00
        branch: branch
      properties:
        id:
          nullable: true
          type: string
        degree:
          nullable: true
          type: string
        branch:
          nullable: true
          type: string
        university:
          nullable: true
          type: string
        cgpa:
          format: double
          type: number
        yearOfJoining:
          format: date-time
          nullable: true
          type: string
        yearOfCompletion:
          format: date-time
          nullable: true
          type: string
        customFields:
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
          type: array
      type: object
    Employee:
      example:
        lastName: lastName
        businessUnit: businessUnit
        gender: null
        displayName: displayName
        mobileNumber: mobileNumber
        dateJoined: 2000-01-23T04:56:07.000+00:00
        jobTitle: jobTitle
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        employeeNumber: employeeNumber
        firstName: firstName
        secondaryJobTitle: secondaryJobTitle
        middleName: middleName
        location: location
        department: department
        email: email
      properties:
        employeeNumber:
          nullable: true
          type: string
        displayName:
          type: string
        firstName:
          type: string
        middleName:
          nullable: true
          type: string
        lastName:
          type: string
        email:
          format: email
          type: string
        mobileNumber:
          format: tel
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          format: date-time
          type: string
        dateJoined:
          format: date-time
          type: string
        department:
          type: string
        businessUnit:
          type: string
        jobTitle:
          type: string
        secondaryJobTitle:
          nullable: true
          type: string
        location:
          type: string
      required:
      - businessUnit
      - dateJoined
      - dateOfBirth
      - department
      - displayName
      - email
      - firstName
      - gender
      - jobTitle
      - lastName
      - location
      type: object
    EmployeeField:
      example:
        jobFields:
        - fieldName: fieldName
          isSystemDefined: true
          fieldOptions:
          - id: id
            value: value
          - id: id
            value: value
          id: id
          fieldType: null
          required: true
        - fieldName: fieldName
          isSystemDefined: true
          fieldOptions:
          - id: id
            value: value
          - id: id
            value: value
          id: id
          fieldType: null
          required: true
        profileFields:
        - fieldName: fieldName
          isSystemDefined: true
          fieldOptions:
          - id: id
            value: value
          - id: id
            value: value
          id: id
          fieldType: null
          required: true
        - fieldName: fieldName
          isSystemDefined: true
          fieldOptions:
          - id: id
            value: value
          - id: id
            value: value
          id: id
          fieldType: null
          required: true
      properties:
        profileFields:
          items:
            $ref: '#/components/schemas/FieldItem'
          nullable: true
          type: array
        jobFields:
          items:
            $ref: '#/components/schemas/FieldItem'
          nullable: true
          type: array
      type: object
    EmployeeFieldResponse:
      description: class represents response.
      example:
        data:
          jobFields:
          - fieldName: fieldName
            isSystemDefined: true
            fieldOptions:
            - id: id
              value: value
            - id: id
              value: value
            id: id
            fieldType: null
            required: true
          - fieldName: fieldName
            isSystemDefined: true
            fieldOptions:
            - id: id
              value: value
            - id: id
              value: value
            id: id
            fieldType: null
            required: true
          profileFields:
          - fieldName: fieldName
            isSystemDefined: true
            fieldOptions:
            - id: id
              value: value
            - id: id
              value: value
            id: id
            fieldType: null
            required: true
          - fieldName: fieldName
            isSystemDefined: true
            fieldOptions:
            - id: id
              value: value
            - id: id
              value: value
            id: id
            fieldType: null
            required: true
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          $ref: '#/components/schemas/EmployeeField'
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeeLeaveBalanceListItem:
      example:
        employeeIdentifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        employeeName: employeeName
        leaveBalance:
        - accruedAmount: 0.8008281904610115
          annualQuota: 5.962133916683182
          leaveTypeName: leaveTypeName
          leaveTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          consumedAmount: 6.027456183070403
          availableBalance: 1.4658129805029452
        - accruedAmount: 0.8008281904610115
          annualQuota: 5.962133916683182
          leaveTypeName: leaveTypeName
          leaveTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          consumedAmount: 6.027456183070403
          availableBalance: 1.4658129805029452
        employeeNumber: employeeNumber
      properties:
        employeeIdentifier:
          format: uuid
          type: string
        employeeNumber:
          nullable: true
          type: string
        employeeName:
          nullable: true
          type: string
        leaveBalance:
          items:
            $ref: '#/components/schemas/LeaveBalanceListItem'
          nullable: true
          type: array
      type: object
    EmployeeLeaveBalanceListItemPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 9
        pageNumber: 5
        previousPage: https://openapi-generator.tech
        data:
        - employeeIdentifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          employeeName: employeeName
          leaveBalance:
          - accruedAmount: 0.8008281904610115
            annualQuota: 5.962133916683182
            leaveTypeName: leaveTypeName
            leaveTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            consumedAmount: 6.027456183070403
            availableBalance: 1.4658129805029452
          - accruedAmount: 0.8008281904610115
            annualQuota: 5.962133916683182
            leaveTypeName: leaveTypeName
            leaveTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            consumedAmount: 6.027456183070403
            availableBalance: 1.4658129805029452
          employeeNumber: employeeNumber
        - employeeIdentifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          employeeName: employeeName
          leaveBalance:
          - accruedAmount: 0.8008281904610115
            annualQuota: 5.962133916683182
            leaveTypeName: leaveTypeName
            leaveTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            consumedAmount: 6.027456183070403
            availableBalance: 1.4658129805029452
          - accruedAmount: 0.8008281904610115
            annualQuota: 5.962133916683182
            leaveTypeName: leaveTypeName
            leaveTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            consumedAmount: 6.027456183070403
            availableBalance: 1.4658129805029452
          employeeNumber: employeeNumber
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 7
        pageSize: 2
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/EmployeeLeaveBalanceListItem'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeeLookup:
      example:
        firstName: firstName
        lastName: lastName
        id: id
        email: email
      properties:
        id:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
      type: object
    EmployeePayment:
      example:
        employeeName: employeeName
        identifier: identifier
        amount: 0.8008281904610115
        bankName: bankName
        id: id
        salaryPaymentMode: salaryPaymentMode
        accountNumber: accountNumber
        ifscCode: ifscCode
        employeeNumber: employeeNumber
        forPeriod: forPeriod
        status: null
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        employeeName:
          nullable: true
          type: string
        forPeriod:
          nullable: true
          type: string
        amount:
          format: double
          type: number
        salaryPaymentMode:
          nullable: true
          type: string
        bankName:
          nullable: true
          type: string
        ifscCode:
          nullable: true
          type: string
        accountNumber:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        identifier:
          nullable: true
          type: string
      type: object
    EmployeePaymentPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 6
        previousPage: https://openapi-generator.tech
        data:
        - employeeName: employeeName
          identifier: identifier
          amount: 0.8008281904610115
          bankName: bankName
          id: id
          salaryPaymentMode: salaryPaymentMode
          accountNumber: accountNumber
          ifscCode: ifscCode
          employeeNumber: employeeNumber
          forPeriod: forPeriod
          status: null
        - employeeName: employeeName
          identifier: identifier
          amount: 0.8008281904610115
          bankName: bankName
          id: id
          salaryPaymentMode: salaryPaymentMode
          accountNumber: accountNumber
          ifscCode: ifscCode
          employeeNumber: employeeNumber
          forPeriod: forPeriod
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 5
        pageSize: 1
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/EmployeePayment'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeePayrollCycleRunStatus:
      enum:
      - 0
      - 1
      - 3
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 50
      format: int32
      type: integer
    EmployeeProfile:
      example:
        exitType: null
        jobTitle:
          identifier: identifier
          title: title
        timeType: null
        resignationSubmittedDate: 2000-01-23T04:56:07.000+00:00
        joiningDate: 2000-01-23T04:56:07.000+00:00
        employmentStatus: null
        employeeNumber: employeeNumber
        personalEmail: personalEmail
        weeklyOffPolicyInfo:
          identifier: identifier
          title: title
        bloodGroup: null
        secondaryJobTitle: secondaryJobTitle
        contingentType:
          name: name
          id: id
        id: id
        marriageDate: 2000-01-23T04:56:07.000+00:00
        exitDate: 2000-01-23T04:56:07.000+00:00
        image:
          fileName: fileName
          thumbs:
            key: thumbs
        identifier: identifier
        educationDetails:
        - university: university
          yearOfCompletion: 2000-01-23T04:56:07.000+00:00
          customFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          degree: degree
          id: id
          cgpa: 0.8008281904610115
          yearOfJoining: 2000-01-23T04:56:07.000+00:00
          branch: branch
        - university: university
          yearOfCompletion: 2000-01-23T04:56:07.000+00:00
          customFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          degree: degree
          id: id
          cgpa: 0.8008281904610115
          yearOfJoining: 2000-01-23T04:56:07.000+00:00
          branch: branch
        homePhone: homePhone
        professionalSummary: professionalSummary
        captureSchemeInfo:
          identifier: identifier
          title: title
        firstName: firstName
        overtimePolicyInfo:
          identifier: identifier
          title: title
        mobilePhone: mobilePhone
        payGradeInfo:
          identifier: identifier
          title: title
        experienceDetails:
        - dateOfJoining: 2000-01-23T04:56:07.000+00:00
          customFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          companyName: companyName
          jobTitle: jobTitle
          description: description
          location: location
          id: id
          dateOfRelieving: 2000-01-23T04:56:07.000+00:00
        - dateOfJoining: 2000-01-23T04:56:07.000+00:00
          customFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          companyName: companyName
          jobTitle: jobTitle
          description: description
          location: location
          id: id
          dateOfRelieving: 2000-01-23T04:56:07.000+00:00
        shiftPolicyInfo:
          identifier: identifier
          title: title
        invitationStatus: null
        maritalStatus: null
        workerType: null
        lastName: lastName
        gender: null
        city: city
        displayName: displayName
        customFields:
        - id: id
          title: title
          type: type
          value: value
        - id: id
          title: title
          type: type
          value: value
        isPrivate: true
        bandInfo:
          identifier: identifier
          title: title
        accountStatus: null
        countryCode: countryCode
        leavePlanInfo:
          identifier: identifier
          title: title
        permanentAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        l2Manager:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
        email: email
        exitStatus: null
        attendanceNumber: attendanceNumber
        exitReason: exitReason
        trackingPolicyInfo:
          identifier: identifier
          title: title
        groups:
        - groupType: null
          id: id
          title: title
        - groupType: null
          id: id
          title: title
        reportsTo:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        dottedLineManager:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
        currentAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        probationEndDate: 2000-01-23T04:56:07.000+00:00
        expensePolicyInfo:
          identifier: identifier
          title: title
        middleName: middleName
        workPhone: workPhone
        relations:
        - relationType: null
          profession: profession
          firstName: firstName
          lastName: lastName
          gender: null
          displayName: displayName
          mobile: mobile
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          id: id
          email: email
        - relationType: null
          profession: profession
          firstName: firstName
          lastName: lastName
          gender: null
          displayName: displayName
          mobile: mobile
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          id: id
          email: email
        isProfileComplete: true
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        middleName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        image:
          $ref: '#/components/schemas/Image'
        jobTitle:
          $ref: '#/components/schemas/LookupInfo'
        secondaryJobTitle:
          nullable: true
          type: string
        reportsTo:
          $ref: '#/components/schemas/EmployeeLookup'
        l2Manager:
          $ref: '#/components/schemas/EmployeeLookup'
        dottedLineManager:
          $ref: '#/components/schemas/EmployeeLookup'
        contingentType:
          $ref: '#/components/schemas/ContingentType'
        timeType:
          $ref: '#/components/schemas/TimeType'
        workerType:
          $ref: '#/components/schemas/WorkerType'
        isPrivate:
          type: boolean
        isProfileComplete:
          type: boolean
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        marriageDate:
          format: date-time
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        joiningDate:
          format: date-time
          type: string
        professionalSummary:
          nullable: true
          type: string
        dateOfBirth:
          format: date-time
          nullable: true
          type: string
        resignationSubmittedDate:
          format: date-time
          nullable: true
          type: string
        exitDate:
          format: date-time
          nullable: true
          type: string
        employmentStatus:
          $ref: '#/components/schemas/EmploymentStatus'
        accountStatus:
          $ref: '#/components/schemas/AccountStatus'
        invitationStatus:
          $ref: '#/components/schemas/InvitationStatus'
        exitStatus:
          $ref: '#/components/schemas/ExitStatus'
        exitType:
          $ref: '#/components/schemas/ExitType'
        exitReason:
          nullable: true
          type: string
        personalEmail:
          nullable: true
          type: string
        workPhone:
          nullable: true
          type: string
        homePhone:
          nullable: true
          type: string
        mobilePhone:
          nullable: true
          type: string
        bloodGroup:
          $ref: '#/components/schemas/BloodGroup'
        attendanceNumber:
          nullable: true
          type: string
        probationEndDate:
          format: date-time
          nullable: true
          type: string
        currentAddress:
          $ref: '#/components/schemas/Address'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        relations:
          items:
            $ref: '#/components/schemas/Relation'
          nullable: true
          type: array
        educationDetails:
          items:
            $ref: '#/components/schemas/Education'
          nullable: true
          type: array
        experienceDetails:
          items:
            $ref: '#/components/schemas/Experience'
          nullable: true
          type: array
        customFields:
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
          type: array
        groups:
          items:
            $ref: '#/components/schemas/GroupLookup'
          nullable: true
          type: array
        leavePlanInfo:
          $ref: '#/components/schemas/LookupInfo'
        bandInfo:
          $ref: '#/components/schemas/LookupInfo'
        payGradeInfo:
          $ref: '#/components/schemas/LookupInfo'
        shiftPolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        weeklyOffPolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        captureSchemeInfo:
          $ref: '#/components/schemas/LookupInfo'
        trackingPolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        expensePolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        overtimePolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        identifier:
          nullable: true
          type: string
      type: object
    EmployeeProfilePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 6
        previousPage: https://openapi-generator.tech
        data:
        - exitType: null
          jobTitle:
            identifier: identifier
            title: title
          timeType: null
          resignationSubmittedDate: 2000-01-23T04:56:07.000+00:00
          joiningDate: 2000-01-23T04:56:07.000+00:00
          employmentStatus: null
          employeeNumber: employeeNumber
          personalEmail: personalEmail
          weeklyOffPolicyInfo:
            identifier: identifier
            title: title
          bloodGroup: null
          secondaryJobTitle: secondaryJobTitle
          contingentType:
            name: name
            id: id
          id: id
          marriageDate: 2000-01-23T04:56:07.000+00:00
          exitDate: 2000-01-23T04:56:07.000+00:00
          image:
            fileName: fileName
            thumbs:
              key: thumbs
          identifier: identifier
          educationDetails:
          - university: university
            yearOfCompletion: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            degree: degree
            id: id
            cgpa: 0.8008281904610115
            yearOfJoining: 2000-01-23T04:56:07.000+00:00
            branch: branch
          - university: university
            yearOfCompletion: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            degree: degree
            id: id
            cgpa: 0.8008281904610115
            yearOfJoining: 2000-01-23T04:56:07.000+00:00
            branch: branch
          homePhone: homePhone
          professionalSummary: professionalSummary
          captureSchemeInfo:
            identifier: identifier
            title: title
          firstName: firstName
          overtimePolicyInfo:
            identifier: identifier
            title: title
          mobilePhone: mobilePhone
          payGradeInfo:
            identifier: identifier
            title: title
          experienceDetails:
          - dateOfJoining: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            companyName: companyName
            jobTitle: jobTitle
            description: description
            location: location
            id: id
            dateOfRelieving: 2000-01-23T04:56:07.000+00:00
          - dateOfJoining: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            companyName: companyName
            jobTitle: jobTitle
            description: description
            location: location
            id: id
            dateOfRelieving: 2000-01-23T04:56:07.000+00:00
          shiftPolicyInfo:
            identifier: identifier
            title: title
          invitationStatus: null
          maritalStatus: null
          workerType: null
          lastName: lastName
          gender: null
          city: city
          displayName: displayName
          customFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          isPrivate: true
          bandInfo:
            identifier: identifier
            title: title
          accountStatus: null
          countryCode: countryCode
          leavePlanInfo:
            identifier: identifier
            title: title
          permanentAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          l2Manager:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          email: email
          exitStatus: null
          attendanceNumber: attendanceNumber
          exitReason: exitReason
          trackingPolicyInfo:
            identifier: identifier
            title: title
          groups:
          - groupType: null
            id: id
            title: title
          - groupType: null
            id: id
            title: title
          reportsTo:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          dottedLineManager:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          currentAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          probationEndDate: 2000-01-23T04:56:07.000+00:00
          expensePolicyInfo:
            identifier: identifier
            title: title
          middleName: middleName
          workPhone: workPhone
          relations:
          - relationType: null
            profession: profession
            firstName: firstName
            lastName: lastName
            gender: null
            displayName: displayName
            mobile: mobile
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            id: id
            email: email
          - relationType: null
            profession: profession
            firstName: firstName
            lastName: lastName
            gender: null
            displayName: displayName
            mobile: mobile
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            id: id
            email: email
          isProfileComplete: true
        - exitType: null
          jobTitle:
            identifier: identifier
            title: title
          timeType: null
          resignationSubmittedDate: 2000-01-23T04:56:07.000+00:00
          joiningDate: 2000-01-23T04:56:07.000+00:00
          employmentStatus: null
          employeeNumber: employeeNumber
          personalEmail: personalEmail
          weeklyOffPolicyInfo:
            identifier: identifier
            title: title
          bloodGroup: null
          secondaryJobTitle: secondaryJobTitle
          contingentType:
            name: name
            id: id
          id: id
          marriageDate: 2000-01-23T04:56:07.000+00:00
          exitDate: 2000-01-23T04:56:07.000+00:00
          image:
            fileName: fileName
            thumbs:
              key: thumbs
          identifier: identifier
          educationDetails:
          - university: university
            yearOfCompletion: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            degree: degree
            id: id
            cgpa: 0.8008281904610115
            yearOfJoining: 2000-01-23T04:56:07.000+00:00
            branch: branch
          - university: university
            yearOfCompletion: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            degree: degree
            id: id
            cgpa: 0.8008281904610115
            yearOfJoining: 2000-01-23T04:56:07.000+00:00
            branch: branch
          homePhone: homePhone
          professionalSummary: professionalSummary
          captureSchemeInfo:
            identifier: identifier
            title: title
          firstName: firstName
          overtimePolicyInfo:
            identifier: identifier
            title: title
          mobilePhone: mobilePhone
          payGradeInfo:
            identifier: identifier
            title: title
          experienceDetails:
          - dateOfJoining: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            companyName: companyName
            jobTitle: jobTitle
            description: description
            location: location
            id: id
            dateOfRelieving: 2000-01-23T04:56:07.000+00:00
          - dateOfJoining: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            companyName: companyName
            jobTitle: jobTitle
            description: description
            location: location
            id: id
            dateOfRelieving: 2000-01-23T04:56:07.000+00:00
          shiftPolicyInfo:
            identifier: identifier
            title: title
          invitationStatus: null
          maritalStatus: null
          workerType: null
          lastName: lastName
          gender: null
          city: city
          displayName: displayName
          customFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          isPrivate: true
          bandInfo:
            identifier: identifier
            title: title
          accountStatus: null
          countryCode: countryCode
          leavePlanInfo:
            identifier: identifier
            title: title
          permanentAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          l2Manager:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          email: email
          exitStatus: null
          attendanceNumber: attendanceNumber
          exitReason: exitReason
          trackingPolicyInfo:
            identifier: identifier
            title: title
          groups:
          - groupType: null
            id: id
            title: title
          - groupType: null
            id: id
            title: title
          reportsTo:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          dottedLineManager:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          currentAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          probationEndDate: 2000-01-23T04:56:07.000+00:00
          expensePolicyInfo:
            identifier: identifier
            title: title
          middleName: middleName
          workPhone: workPhone
          relations:
          - relationType: null
            profession: profession
            firstName: firstName
            lastName: lastName
            gender: null
            displayName: displayName
            mobile: mobile
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            id: id
            email: email
          - relationType: null
            profession: profession
            firstName: firstName
            lastName: lastName
            gender: null
            displayName: displayName
            mobile: mobile
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            id: id
            email: email
          isProfileComplete: true
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 5
        pageSize: 1
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/EmployeeProfile'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeeProfileResponse:
      description: class represents response.
      example:
        data:
          exitType: null
          jobTitle:
            identifier: identifier
            title: title
          timeType: null
          resignationSubmittedDate: 2000-01-23T04:56:07.000+00:00
          joiningDate: 2000-01-23T04:56:07.000+00:00
          employmentStatus: null
          employeeNumber: employeeNumber
          personalEmail: personalEmail
          weeklyOffPolicyInfo:
            identifier: identifier
            title: title
          bloodGroup: null
          secondaryJobTitle: secondaryJobTitle
          contingentType:
            name: name
            id: id
          id: id
          marriageDate: 2000-01-23T04:56:07.000+00:00
          exitDate: 2000-01-23T04:56:07.000+00:00
          image:
            fileName: fileName
            thumbs:
              key: thumbs
          identifier: identifier
          educationDetails:
          - university: university
            yearOfCompletion: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            degree: degree
            id: id
            cgpa: 0.8008281904610115
            yearOfJoining: 2000-01-23T04:56:07.000+00:00
            branch: branch
          - university: university
            yearOfCompletion: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            degree: degree
            id: id
            cgpa: 0.8008281904610115
            yearOfJoining: 2000-01-23T04:56:07.000+00:00
            branch: branch
          homePhone: homePhone
          professionalSummary: professionalSummary
          captureSchemeInfo:
            identifier: identifier
            title: title
          firstName: firstName
          overtimePolicyInfo:
            identifier: identifier
            title: title
          mobilePhone: mobilePhone
          payGradeInfo:
            identifier: identifier
            title: title
          experienceDetails:
          - dateOfJoining: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            companyName: companyName
            jobTitle: jobTitle
            description: description
            location: location
            id: id
            dateOfRelieving: 2000-01-23T04:56:07.000+00:00
          - dateOfJoining: 2000-01-23T04:56:07.000+00:00
            customFields:
            - id: id
              title: title
              type: type
              value: value
            - id: id
              title: title
              type: type
              value: value
            companyName: companyName
            jobTitle: jobTitle
            description: description
            location: location
            id: id
            dateOfRelieving: 2000-01-23T04:56:07.000+00:00
          shiftPolicyInfo:
            identifier: identifier
            title: title
          invitationStatus: null
          maritalStatus: null
          workerType: null
          lastName: lastName
          gender: null
          city: city
          displayName: displayName
          customFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          isPrivate: true
          bandInfo:
            identifier: identifier
            title: title
          accountStatus: null
          countryCode: countryCode
          leavePlanInfo:
            identifier: identifier
            title: title
          permanentAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          l2Manager:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          email: email
          exitStatus: null
          attendanceNumber: attendanceNumber
          exitReason: exitReason
          trackingPolicyInfo:
            identifier: identifier
            title: title
          groups:
          - groupType: null
            id: id
            title: title
          - groupType: null
            id: id
            title: title
          reportsTo:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          dottedLineManager:
            firstName: firstName
            lastName: lastName
            id: id
            email: email
          currentAddress:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          probationEndDate: 2000-01-23T04:56:07.000+00:00
          expensePolicyInfo:
            identifier: identifier
            title: title
          middleName: middleName
          workPhone: workPhone
          relations:
          - relationType: null
            profession: profession
            firstName: firstName
            lastName: lastName
            gender: null
            displayName: displayName
            mobile: mobile
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            id: id
            email: email
          - relationType: null
            profession: profession
            firstName: firstName
            lastName: lastName
            gender: null
            displayName: displayName
            mobile: mobile
            dateOfBirth: 2000-01-23T04:56:07.000+00:00
            id: id
            email: email
          isProfileComplete: true
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          $ref: '#/components/schemas/EmployeeProfile'
      type: object
      x-konfig-is-used-in-successful-response: true
      x-konfig-is-used-in-non-successful-response: true
    EmploymentStatus:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    ExitStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ExitType:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    Expense:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        expenseCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        amount: amount
        comment: comment
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
      properties:
        title:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        date:
          format: date-time
          type: string
        expenseCategoryId:
          format: uuid
          type: string
        amount:
          nullable: true
          type: string
        comment:
          nullable: true
          type: string
      type: object
    ExpenseCategory:
      example:
        categoryType: null
        code: code
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        description:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        categoryType:
          $ref: '#/components/schemas/ExpenseType'
      type: object
    ExpenseCategoryPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - categoryType: null
          code: code
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - categoryType: null
          code: code
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/ExpenseCategory'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ExpenseClaim:
      example:
        employeeIdentifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        approvalStatus: null
        employeeName: employeeName
        submittedOn: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        claimNumber: claimNumber
        expenses:
        - date: 2000-01-23T04:56:07.000+00:00
          expenseCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          amount: amount
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - date: 2000-01-23T04:56:07.000+00:00
          expenseCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          amount: amount
          comment: comment
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
      properties:
        title:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        employeeIdentifier:
          format: uuid
          type: string
        employeeName:
          nullable: true
          type: string
        claimNumber:
          nullable: true
          type: string
        submittedOn:
          format: date-time
          type: string
        approvalStatus:
          $ref: '#/components/schemas/ExpenseClaimApprovalStatus'
        expenses:
          items:
            $ref: '#/components/schemas/Expense'
          nullable: true
          type: array
      type: object
    ExpenseClaimApprovalStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      format: int32
      type: integer
    ExpenseClaimPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - employeeIdentifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          approvalStatus: null
          employeeName: employeeName
          submittedOn: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
          claimNumber: claimNumber
          expenses:
          - date: 2000-01-23T04:56:07.000+00:00
            expenseCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            amount: amount
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
          - date: 2000-01-23T04:56:07.000+00:00
            expenseCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            amount: amount
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
        - employeeIdentifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          approvalStatus: null
          employeeName: employeeName
          submittedOn: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
          claimNumber: claimNumber
          expenses:
          - date: 2000-01-23T04:56:07.000+00:00
            expenseCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            amount: amount
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
          - date: 2000-01-23T04:56:07.000+00:00
            expenseCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            amount: amount
            comment: comment
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/ExpenseClaim'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ExpenseType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      format: int32
      type: integer
    Experience:
      example:
        dateOfJoining: 2000-01-23T04:56:07.000+00:00
        customFields:
        - id: id
          title: title
          type: type
          value: value
        - id: id
          title: title
          type: type
          value: value
        companyName: companyName
        jobTitle: jobTitle
        description: description
        location: location
        id: id
        dateOfRelieving: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        companyName:
          nullable: true
          type: string
        jobTitle:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        dateOfJoining:
          format: date-time
          nullable: true
          type: string
        dateOfRelieving:
          format: date-time
          nullable: true
          type: string
        customFields:
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
          type: array
      type: object
    FieldChoice:
      example:
        id: id
        value: value
      properties:
        id:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    FieldItem:
      example:
        fieldName: fieldName
        isSystemDefined: true
        fieldOptions:
        - id: id
          value: value
        - id: id
          value: value
        id: id
        fieldType: null
        required: true
      properties:
        id:
          nullable: true
          type: string
        fieldName:
          nullable: true
          type: string
        required:
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        isSystemDefined:
          type: boolean
        fieldOptions:
          items:
            $ref: '#/components/schemas/FieldChoice'
          nullable: true
          type: array
      type: object
    FieldType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      format: int32
      type: integer
    FilterFieldType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    FilterValue:
      properties:
        value:
          items:
            type: string
          nullable: true
          type: array
        minValue:
          nullable: true
          type: string
        maxValue:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/FilterFieldType'
      type: object
    FilteringOptions:
      properties:
        filters:
          additionalProperties:
            $ref: '#/components/schemas/FilterValue'
          nullable: true
          type: object
        isEnable:
          readOnly: true
          type: boolean
        searchKey:
          nullable: true
          type: string
      type: object
    Frequency:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      format: int32
      type: integer
    Gender:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    GoalMetricType:
      enum:
      - 0
      - 1
      - 3
      format: int32
      type: integer
    GoalStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    GoalType:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    Group:
      example:
        identifier: identifier
        code: code
        glCode: glCode
        name: name
        groupTypeId: groupTypeId
        description: description
        id: id
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        groupTypeId:
          nullable: true
          type: string
        glCode:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
      type: object
    GroupLookup:
      example:
        groupType: null
        id: id
        title: title
      properties:
        title:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        groupType:
          $ref: '#/components/schemas/SystemGroupType'
      type: object
    GroupPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          code: code
          glCode: glCode
          name: name
          groupTypeId: groupTypeId
          description: description
          id: id
        - identifier: identifier
          code: code
          glCode: glCode
          name: name
          groupTypeId: groupTypeId
          description: description
          id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/Group'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupType:
      example:
        identifier: identifier
        isSystemDefined: true
        systemGroupType: null
        name: name
        id: id
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        isSystemDefined:
          type: boolean
        systemGroupType:
          $ref: '#/components/schemas/SystemGroupType'
        identifier:
          nullable: true
          type: string
      type: object
    GroupTypePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          isSystemDefined: true
          systemGroupType: null
          name: name
          id: id
        - identifier: identifier
          isSystemDefined: true
          systemGroupType: null
          name: name
          id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/GroupType'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Image:
      example:
        fileName: fileName
        thumbs:
          key: thumbs
      properties:
        fileName:
          nullable: true
          type: string
        thumbs:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
      type: object
    InvitationStatus:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    JobDetailsUpdateRequest:
      example:
        attendanceNumber: attendanceNumber
        businessUnit: businessUnit
        reportingManager: reportingManager
        costCenter: costCenter
        customFields:
          key: ""
        jobTitle: jobTitle
        timeType: null
        holidayList: holidayList
        employeeNumber: employeeNumber
        noticePeriod: noticePeriod
        payBand: payBand
        payGrade: payGrade
        attendanceCaptureScheme: attendanceCaptureScheme
        location: location
        department: department
        expensePolicy: expensePolicy
      properties:
        employeeNumber:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        businessUnit:
          nullable: true
          type: string
        department:
          nullable: true
          type: string
        jobTitle:
          nullable: true
          type: string
        reportingManager:
          nullable: true
          type: string
        attendanceNumber:
          nullable: true
          type: string
        timeType:
          $ref: '#/components/schemas/TimeType'
        attendanceCaptureScheme:
          nullable: true
          type: string
        expensePolicy:
          nullable: true
          type: string
        noticePeriod:
          nullable: true
          type: string
        holidayList:
          nullable: true
          type: string
        costCenter:
          nullable: true
          type: string
        payBand:
          nullable: true
          type: string
        payGrade:
          nullable: true
          type: string
        customFields:
          additionalProperties:
            nullable: true
          nullable: true
          type: object
      type: object
    JobTitle:
      example:
        identifier: identifier
        name: name
        description: description
        id: id
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
      type: object
    JobTitlePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          name: name
          description: description
          id: id
        - identifier: identifier
          name: name
          description: description
          id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/JobTitle'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaveBalanceListItem:
      example:
        accruedAmount: 0.8008281904610115
        annualQuota: 5.962133916683182
        leaveTypeName: leaveTypeName
        leaveTypeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        consumedAmount: 6.027456183070403
        availableBalance: 1.4658129805029452
      properties:
        leaveTypeId:
          format: uuid
          type: string
        leaveTypeName:
          nullable: true
          type: string
        accruedAmount:
          format: double
          type: number
        consumedAmount:
          format: double
          type: number
        availableBalance:
          format: double
          type: number
        annualQuota:
          format: double
          type: number
      type: object
    LeaveDayStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    LeaveRequest:
      example:
        note: note
        identifier: identifier
        fromSession: null
        toDate: 2000-01-23T04:56:07.000+00:00
        employeeNumber: employeeNumber
        cancelRejectReason: cancelRejectReason
        employeeIdentifier: employeeIdentifier
        fromDate: 2000-01-23T04:56:07.000+00:00
        selection:
        - duration:
            duration: 6.027456183070403
            unit: null
            durationString: durationString
          leaveTypeIdentifier: leaveTypeIdentifier
          count: 0.8008282
          leaveTypeName: leaveTypeName
          leaveTypeId: 1
        - duration:
            duration: 6.027456183070403
            unit: null
            durationString: durationString
          leaveTypeIdentifier: leaveTypeIdentifier
          count: 0.8008282
          leaveTypeName: leaveTypeName
          leaveTypeId: 1
        toSession: null
        requestedOn: 2000-01-23T04:56:07.000+00:00
        id: id
        status: null
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        employeeIdentifier:
          nullable: true
          type: string
        employeeNumber:
          nullable: true
          type: string
        fromDate:
          format: date-time
          type: string
        toDate:
          format: date-time
          type: string
        fromSession:
          $ref: '#/components/schemas/SessionType'
        toSession:
          $ref: '#/components/schemas/SessionType'
        requestedOn:
          format: date-time
          type: string
        note:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/LeaveRequestStatus'
        selection:
          items:
            $ref: '#/components/schemas/LeaveTypeSelection'
          nullable: true
          type: array
        cancelRejectReason:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
      type: object
    LeaveRequestPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 7
        pageNumber: 5
        previousPage: https://openapi-generator.tech
        data:
        - note: note
          identifier: identifier
          fromSession: null
          toDate: 2000-01-23T04:56:07.000+00:00
          employeeNumber: employeeNumber
          cancelRejectReason: cancelRejectReason
          employeeIdentifier: employeeIdentifier
          fromDate: 2000-01-23T04:56:07.000+00:00
          selection:
          - duration:
              duration: 6.027456183070403
              unit: null
              durationString: durationString
            leaveTypeIdentifier: leaveTypeIdentifier
            count: 0.8008282
            leaveTypeName: leaveTypeName
            leaveTypeId: 1
          - duration:
              duration: 6.027456183070403
              unit: null
              durationString: durationString
            leaveTypeIdentifier: leaveTypeIdentifier
            count: 0.8008282
            leaveTypeName: leaveTypeName
            leaveTypeId: 1
          toSession: null
          requestedOn: 2000-01-23T04:56:07.000+00:00
          id: id
          status: null
        - note: note
          identifier: identifier
          fromSession: null
          toDate: 2000-01-23T04:56:07.000+00:00
          employeeNumber: employeeNumber
          cancelRejectReason: cancelRejectReason
          employeeIdentifier: employeeIdentifier
          fromDate: 2000-01-23T04:56:07.000+00:00
          selection:
          - duration:
              duration: 6.027456183070403
              unit: null
              durationString: durationString
            leaveTypeIdentifier: leaveTypeIdentifier
            count: 0.8008282
            leaveTypeName: leaveTypeName
            leaveTypeId: 1
          - duration:
              duration: 6.027456183070403
              unit: null
              durationString: durationString
            leaveTypeIdentifier: leaveTypeIdentifier
            count: 0.8008282
            leaveTypeName: leaveTypeName
            leaveTypeId: 1
          toSession: null
          requestedOn: 2000-01-23T04:56:07.000+00:00
          id: id
          status: null
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 2
        pageSize: 5
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/LeaveRequest'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaveRequestStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    LeaveType:
      example:
        identifier: identifier
        isPaid: true
        name: name
        description: description
      properties:
        description:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        isPaid:
          type: boolean
      type: object
    LeaveTypePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          isPaid: true
          name: name
          description: description
        - identifier: identifier
          isPaid: true
          name: name
          description: description
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/LeaveType'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    LeaveTypeSelection:
      example:
        duration:
          duration: 6.027456183070403
          unit: null
          durationString: durationString
        leaveTypeIdentifier: leaveTypeIdentifier
        count: 0.8008282
        leaveTypeName: leaveTypeName
        leaveTypeId: 1
      properties:
        leaveTypeIdentifier:
          nullable: true
          type: string
        leaveTypeName:
          nullable: true
          type: string
        count:
          format: float
          type: number
        duration:
          $ref: '#/components/schemas/TimePeriod'
        leaveTypeId:
          format: int32
          type: integer
      type: object
    LeaveTypeStats:
      properties:
        identifier:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        duration:
          $ref: '#/components/schemas/TimePeriod'
        durationString:
          nullable: true
          readOnly: true
          type: string
      type: object
    LeaveTypeStatsListResponse:
      description: class represents response.
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/LeaveTypeStats'
          nullable: true
          type: array
      type: object
    Location:
      example:
        identifier: identifier
        address:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        name: name
        description: description
        id: id
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Address'
        identifier:
          nullable: true
          type: string
      type: object
    LocationPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          address:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          name: name
          description: description
          id: id
        - identifier: identifier
          address:
            zip: zip
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          name: name
          description: description
          id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/Location'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    LookupInfo:
      example:
        identifier: identifier
        title: title
      properties:
        title:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
      type: object
    MaritalStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    PSACustomField:
      example:
        id: id
        title: title
        value: value
      properties:
        title:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    PagingOptions:
      description: Class paging options
      properties:
        pageIndex:
          description: Gets or sets the index of the page.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
      type: object
    PayItemView:
      example:
        amount: 9.301444243932576
        accountingCode: accountingCode
        componentTitle: componentTitle
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        componentIdentifier: componentIdentifier
      properties:
        id:
          format: uuid
          type: string
        componentIdentifier:
          nullable: true
          type: string
        componentTitle:
          nullable: true
          type: string
        amount:
          format: double
          type: number
        accountingCode:
          nullable: true
          type: string
      type: object
    PaymentStatus:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    PaymentTransaction:
      example:
        note: note
        paymentIdentifier: paymentIdentifier
        transactionOn: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        paymentIdentifier:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        transactionOn:
          format: date-time
          type: string
        note:
          nullable: true
          type: string
      type: object
    PayrollRunStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    PersonalDetailsUpdateRequest:
      example:
        lastName: lastName
        gender: null
        displayName: displayName
        customFields:
          key: ""
        homePhone: homePhone
        professionalSummary: professionalSummary
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        personalEmail: personalEmail
        currentAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        firstName: firstName
        skypeId: skypeId
        bloodGroup: null
        middleName: middleName
        workPhone: workPhone
        marriageDate: 2000-01-23T04:56:07.000+00:00
        permanentAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        relations:
        - relationType: null
          profession: profession
          firstName: firstName
          lastName: lastName
          gender: null
          displayName: displayName
          mobile: mobile
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          id: id
          email: email
        - relationType: null
          profession: profession
          firstName: firstName
          lastName: lastName
          gender: null
          displayName: displayName
          mobile: mobile
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          id: id
          email: email
        maritalStatus: null
      properties:
        displayName:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        middleName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          format: date-time
          nullable: true
          type: string
        workPhone:
          format: tel
          nullable: true
          type: string
        homePhone:
          format: tel
          nullable: true
          type: string
        personalEmail:
          format: email
          nullable: true
          type: string
        skypeId:
          nullable: true
          type: string
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        marriageDate:
          format: date-time
          nullable: true
          type: string
        relations:
          items:
            $ref: '#/components/schemas/Relation'
          nullable: true
          type: array
        bloodGroup:
          $ref: '#/components/schemas/BloodGroup'
        currentAddress:
          $ref: '#/components/schemas/Address'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        professionalSummary:
          nullable: true
          type: string
        customFields:
          additionalProperties:
            nullable: true
          nullable: true
          type: object
      type: object
    PostLeaveRequest:
      example:
        fromDate: 2000-01-23T04:56:07.000+00:00
        requestedBy: requestedBy
        reason: reason
        note: note
        fromSession: null
        toSession: null
        toDate: 2000-01-23T04:56:07.000+00:00
        employeeId: employeeId
        leaveTypeId: leaveTypeId
      properties:
        employeeId:
          type: string
        requestedBy:
          type: string
        fromDate:
          format: date-time
          type: string
        toDate:
          format: date-time
          type: string
        fromSession:
          $ref: '#/components/schemas/SessionType'
        toSession:
          $ref: '#/components/schemas/SessionType'
        leaveTypeId:
          type: string
        reason:
          type: string
        note:
          nullable: true
          type: string
      required:
      - employeeId
      - fromDate
      - leaveTypeId
      - reason
      - requestedBy
      - toDate
      type: object
    Project:
      example:
        clientId: clientId
        code: code
        endDate: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        startDate: 2000-01-23T04:56:07.000+00:00
        status: null
        isBillable: true
      properties:
        description:
          nullable: true
          type: string
        clientId:
          type: string
        name:
          type: string
        code:
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        isBillable:
          type: boolean
      required:
      - clientId
      - code
      - endDate
      - name
      - startDate
      type: object
    ProjectPhase:
      example:
        identifier: identifier
        name: name
        id: id
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
      type: object
    ProjectPhasePagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 5
        pageNumber: 0
        previousPage: https://openapi-generator.tech
        data:
        - identifier: identifier
          name: name
          id: id
        - identifier: identifier
          name: name
          id: id
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 1
        pageSize: 6
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/ProjectPhase'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ProjectStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ProjectTask:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        name: name
        phaseId: phaseId
        description: description
        estimatedHours: 0.8008281904610115
        taskBillingType: null
        projectId: projectId
        assignedTo:
        - assignedTo
        - assignedTo
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          nullable: true
          type: string
        projectId:
          type: string
        name:
          type: string
        taskBillingType:
          $ref: '#/components/schemas/TaskBillingType'
        assignedTo:
          items:
            type: string
          nullable: true
          type: array
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        estimatedHours:
          format: double
          nullable: true
          type: number
        phaseId:
          nullable: true
          type: string
      required:
      - endDate
      - name
      - projectId
      - startDate
      type: object
    QueryOptions:
      description: Class query options. Used to pass database query options
      properties:
        pagingOptions:
          $ref: '#/components/schemas/PagingOptions'
        sortingOptions:
          $ref: '#/components/schemas/SortingOptions'
        filterOptions:
          $ref: '#/components/schemas/FilteringOptions'
        searchableOptions:
          items:
            type: string
          nullable: true
          type: array
        fieldsToReturn:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Relation:
      example:
        relationType: null
        profession: profession
        firstName: firstName
        lastName: lastName
        gender: null
        displayName: displayName
        mobile: mobile
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        id: id
        email: email
      properties:
        id:
          nullable: true
          type: string
        relationType:
          $ref: '#/components/schemas/RelationType'
        gender:
          $ref: '#/components/schemas/Gender'
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        dateOfBirth:
          format: date-time
          nullable: true
          type: string
        profession:
          nullable: true
          type: string
        mobile:
          nullable: true
          type: string
      type: object
    RelationType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      format: int32
      type: integer
    RemunerationType:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    SessionType:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    SortingOptions:
      properties:
        orderBy:
          nullable: true
          type: string
        direction:
          nullable: true
          type: string
      type: object
    StringResponse:
      description: class represents response.
      example:
        data: data
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    SystemGroupType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      format: int32
      type: integer
    TaskBillingType:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    TaskType:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    TimeDuration:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      format: int32
      type: integer
    TimeEntryStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    TimeFrameStatus:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    TimePeriod:
      example:
        duration: 6.027456183070403
        unit: null
        durationString: durationString
      properties:
        unit:
          $ref: '#/components/schemas/TimeDuration'
        duration:
          format: double
          type: number
        durationString:
          nullable: true
          readOnly: true
          type: string
      type: object
    TimeType:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    UpdateClient:
      example:
        code: code
        name: name
        description: description
        billingAddress:
          zip: zip
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
      properties:
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
      type: object
    UpdateProject:
      example:
        code: code
        endDate: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        startDate: 2000-01-23T04:56:07.000+00:00
        status: null
        isBillable: true
      properties:
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        isBillable:
          nullable: true
          type: boolean
      type: object
    UpdateProjectTask:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        name: name
        phaseId: phaseId
        description: description
        estimatedHours: 0.8008281904610115
        taskBillingType: null
        assignedTo:
        - assignedTo
        - assignedTo
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        taskBillingType:
          $ref: '#/components/schemas/TaskBillingType'
        assignedTo:
          items:
            type: string
          nullable: true
          type: array
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        estimatedHours:
          format: double
          nullable: true
          type: number
        phaseId:
          nullable: true
          type: string
      type: object
    WorkerType:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    StringStringValuesKeyValuePair:
      properties:
        key:
          nullable: true
          type: string
        value:
          items:
            type: string
          type: array
      type: object
    APIEmployeeReview:
      properties:
        summary:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        employee:
          $ref: '#/components/schemas/APIEmployeeLookup'
        reviewGroup:
          $ref: '#/components/schemas/APIReviewGroupLookup'
        reviewCycle:
          $ref: '#/components/schemas/APIReviewCycleLookup'
        ratings:
          items:
            $ref: '#/components/schemas/APIReviewRating'
          nullable: true
          type: array
        status:
          $ref: '#/components/schemas/ReviewStatus'
      type: object
    APIEmployeeReviewPagedResponse:
      description: class represents paged response.
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIEmployeeReview'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
    APIReviewCycle:
      properties:
        id:
          nullable: true
          readOnly: true
          type: string
        reviewGroup:
          $ref: '#/components/schemas/APIReviewGroupLookup'
        name:
          nullable: true
          type: string
        fromDate:
          format: date-time
          nullable: true
          type: string
        toDate:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        frequency:
          $ref: '#/components/schemas/Frequency'
        status:
          $ref: '#/components/schemas/ReviewGroupCycleStatus'
        isAdhoc:
          type: boolean
      type: object
    APIReviewCycleLookup:
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    APIReviewCyclePagedResponse:
      description: class represents paged response.
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIReviewCycle'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
    APIReviewGroup:
      properties:
        description:
          nullable: true
          type: string
        id:
          nullable: true
          readOnly: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    APIReviewGroupLookup:
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    APIReviewGroupPagedResponse:
      description: class represents paged response.
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/APIReviewGroup'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
    APIReviewRating:
      properties:
        ratingId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        rating:
          format: double
          nullable: true
          type: number
      type: object
    ReviewGroupCycleStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ReviewStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      format: int32
      type: integer
    ApplicationStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    CandidateNoteDTO:
      example:
        comments: comments
        tags:
        - tags
        - tags
      properties:
        tags:
          description: Gets or sets the candidate tags
          items:
            type: string
          nullable: true
          type: array
        comments:
          description: Gets or sets the commnet
          nullable: true
          type: string
      type: object
    EducationDTO:
      example:
        dateOfJoining: dateOfJoining
        university: university
        degree: degree
        location: location
        branch: branch
        dateOfCompletion: dateOfCompletion
      properties:
        degree:
          description: Gets or sets the degree.
          nullable: true
          type: string
        branch:
          description: Gets or sets the branch.
          nullable: true
          type: string
        dateOfJoining:
          description: Gets or sets the date of joining.
          nullable: true
          type: string
        dateOfCompletion:
          description: Gets or sets the date of completion.
          nullable: true
          type: string
        university:
          description: Gets or sets the university.
          nullable: true
          type: string
        location:
          description: Gets or sets the location.
          nullable: true
          type: string
      type: object
    ErrorDetail:
      description: Represents a detailed error message for an individual field.
      properties:
        fieldName:
          description: Gets or sets the name of the field that caused the error.
          nullable: true
          type: string
        errorMessage:
          description: Gets or sets the error message associated with the field.
          nullable: true
          type: string
      type: object
    ExperienceDTO:
      example:
        isCurrentlyWorking: true
        dateOfJoining: dateOfJoining
        companyName: companyName
        location: location
        designation: designation
        dateOfRelieving: dateOfRelieving
      properties:
        companyName:
          description: Gets or sets the company name.
          nullable: true
          type: string
        designation:
          description: Gets or sets the designation.
          nullable: true
          type: string
        isCurrentlyWorking:
          description: Gets or sets a value indicating whether this instance is currently
            working.
          type: boolean
        dateOfJoining:
          description: Gets or sets the date of joining.
          nullable: true
          type: string
        dateOfRelieving:
          description: Gets or sets the date of relieving.
          nullable: true
          type: string
        location:
          description: Gets or sets the location.
          nullable: true
          type: string
      type: object
    FieldOptionDTO:
      example:
        id: id
        value: value
      properties:
        id:
          description: Gets or sets the identifier.
          nullable: true
          type: string
        value:
          description: Gets or sets the value.
          nullable: true
          type: string
      type: object
    HiringTeamDTO:
      example:
        identifier: identifier
        displayName: displayName
        type: null
      properties:
        identifier:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/JobRecruiterType'
      type: object
    InterviewDTO:
      example:
        jobId: jobId
        panelMembers: panelMembers
        interviewType: interviewType
        timeZoneId: timeZoneId
        interviewDate: interviewDate
        scheduledDate: scheduledDate
        startTime:
          hours: 0
          minutes: 6
        scheduledBy: scheduledBy
        id: id
        endTime:
          hours: 0
          minutes: 6
        candidateId: candidateId
        stageId: stageId
      properties:
        id:
          nullable: true
          type: string
        candidateId:
          nullable: true
          type: string
        jobId:
          nullable: true
          type: string
        interviewDate:
          nullable: true
          type: string
        startTime:
          $ref: '#/components/schemas/TimeDTO'
        endTime:
          $ref: '#/components/schemas/TimeDTO'
        timeZoneId:
          nullable: true
          type: string
        scheduledBy:
          nullable: true
          type: string
        scheduledDate:
          nullable: true
          type: string
        interviewType:
          nullable: true
          type: string
        stageId:
          nullable: true
          type: string
        panelMembers:
          nullable: true
          type: string
      type: object
    JobApplicationDetailsDTO:
      example:
        movedtoStageOn: movedtoStageOn
        appliedOn: appliedOn
        sourcedBy: sourcedBy
        jobHiringStageId: jobHiringStageId
        sourceTitle: sourceTitle
        assignedOn: assignedOn
        screeningQuestionsResponse:
          key: screeningQuestionsResponse
        assignedTo: assignedTo
        status: null
      properties:
        jobHiringStageId:
          description: Gets or sets the job hiring stage identifier.
          nullable: true
          type: string
        movedtoStageOn:
          description: Gets or sets the moved to current stage on.
          nullable: true
          type: string
        screeningQuestionsResponse:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the screening questions.
          nullable: true
          type: object
        appliedOn:
          description: Gets or sets the applied on.
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        sourcedBy:
          description: Gets or sets the sourced by.
          nullable: true
          type: string
        sourceTitle:
          description: Gets or sets the source title.
          nullable: true
          type: string
        assignedTo:
          description: Gets or sets the assigned to.
          nullable: true
          type: string
        assignedOn:
          description: Gets or sets the assigned on.
          nullable: true
          type: string
      type: object
    JobApplicationFieldsDTO:
      example:
        fieldName: fieldName
        fieldOptions:
        - id: id
          value: value
        - id: id
          value: value
        id: id
        fieldType: null
        required: true
      properties:
        fieldName:
          description: Gets or sets the name of the field.
          nullable: true
          type: string
        id:
          description: Gets or sets the Field Identifier of the field.
          nullable: true
          type: string
        required:
          description: Gets or sets a value indicating whether this !:FieldListItem
            is required.
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        fieldOptions:
          description: Gets or sets the field options.
          items:
            $ref: '#/components/schemas/FieldOptionDTO'
          nullable: true
          type: array
      type: object
    JobCandidateDetailsDTO:
      example:
        candidateTags:
        - identifier: identifier
          name: name
          description: description
        - identifier: identifier
          name: name
          description: description
        lastName: lastName
        educationDetails:
        - dateOfJoining: dateOfJoining
          university: university
          degree: degree
          location: location
          branch: branch
          dateOfCompletion: dateOfCompletion
        - dateOfJoining: dateOfJoining
          university: university
          degree: degree
          location: location
          branch: branch
          dateOfCompletion: dateOfCompletion
        gender: null
        jobApplicationDetails:
          movedtoStageOn: movedtoStageOn
          appliedOn: appliedOn
          sourcedBy: sourcedBy
          jobHiringStageId: jobHiringStageId
          sourceTitle: sourceTitle
          assignedOn: assignedOn
          screeningQuestionsResponse:
            key: screeningQuestionsResponse
          assignedTo: assignedTo
          status: null
        additionalCandidateDetails:
          key: additionalCandidateDetails
        archivedDetails:
          key: archivedDetails
        skills:
        - skills
        - skills
        firstName: firstName
        phone: phone
        experienceDetails:
        - isCurrentlyWorking: true
          dateOfJoining: dateOfJoining
          companyName: companyName
          location: location
          designation: designation
          dateOfRelieving: dateOfRelieving
        - isCurrentlyWorking: true
          dateOfJoining: dateOfJoining
          companyName: companyName
          location: location
          designation: designation
          dateOfRelieving: dateOfRelieving
        middleName: middleName
        id: id
        email: email
      properties:
        id:
          nullable: true
          type: string
        firstName:
          description: Gets or sets the first name.
          nullable: true
          type: string
        lastName:
          description: Gets or sets the last name.
          nullable: true
          type: string
        middleName:
          description: Gets or sets the middle name.
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        phone:
          description: Gets or sets the mobile phone.
          nullable: true
          type: string
        educationDetails:
          description: Gets or sets the education details.
          items:
            $ref: '#/components/schemas/EducationDTO'
          nullable: true
          type: array
        candidateTags:
          description: Gets or sets the candidate tags
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
          type: array
        experienceDetails:
          description: Gets or sets the experience details.
          items:
            $ref: '#/components/schemas/ExperienceDTO'
          nullable: true
          type: array
        skills:
          description: Gets or sets the skills.
          items:
            type: string
          nullable: true
          type: array
        additionalCandidateDetails:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
        jobApplicationDetails:
          $ref: '#/components/schemas/JobApplicationDetailsDTO'
        archivedDetails:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    JobCustomFieldDTO:
      example:
        fieldName: fieldName
        fieldType: null
        value: value
        required: true
      properties:
        fieldName:
          nullable: true
          type: string
        required:
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        value:
          nullable: true
          type: string
      type: object
    JobDTO:
      example:
        departmentName: departmentName
        canAllowInternalEmployees: true
        orgJobId: orgJobId
        customFields:
        - fieldName: fieldName
          fieldType: null
          value: value
          required: true
        - fieldName: fieldName
          fieldType: null
          value: value
          required: true
        targetHireDate: targetHireDate
        description: description
        requisitionIdentifier: requisitionIdentifier
        publishedOn: publishedOn
        jobLocations:
        - city: city
          name: name
          state: state
          countryName: countryName
        - city: city
          name: name
          state: state
          countryName: countryName
        hiringTeam:
        - identifier: identifier
          displayName: displayName
          type: null
        - identifier: identifier
          displayName: displayName
          type: null
        title: title
        experience: experience
        careerPortalUrl: careerPortalUrl
        createdOn: createdOn
        noOfOpenings: noOfOpenings
        isCreatedFromRequisition: true
        id: id
        jobType: jobType
        isReferralEnabled: true
        status: null
      properties:
        title:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        noOfOpenings:
          nullable: true
          type: string
        departmentName:
          nullable: true
          type: string
        jobType:
          nullable: true
          type: string
        isReferralEnabled:
          type: boolean
        isCreatedFromRequisition:
          type: boolean
        requisitionIdentifier:
          nullable: true
          type: string
        canAllowInternalEmployees:
          type: boolean
        orgJobId:
          nullable: true
          type: string
        jobLocations:
          items:
            $ref: '#/components/schemas/LocationDTO'
          nullable: true
          type: array
        hiringTeam:
          items:
            $ref: '#/components/schemas/HiringTeamDTO'
          nullable: true
          type: array
        careerPortalUrl:
          nullable: true
          type: string
        targetHireDate:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
        createdOn:
          nullable: true
          type: string
        publishedOn:
          nullable: true
          type: string
        experience:
          nullable: true
          type: string
        customFields:
          items:
            $ref: '#/components/schemas/JobCustomFieldDTO'
          nullable: true
          type: array
      type: object
    JobRecruiterType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 99
      format: int32
      type: integer
    JobStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    LocationDTO:
      example:
        city: city
        name: name
        state: state
        countryName: countryName
      properties:
        name:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        countryName:
          nullable: true
          type: string
      type: object
    OkErrorResponse:
      properties:
        status:
          description: Gets or sets the HTTP status code of the response.
          format: int32
          type: integer
        succeeded:
          description: Gets a value indicating whether the response operation succeeded
            (HTTP status code within the range of 200 to 299).
          readOnly: true
          type: boolean
        message:
          description: Gets or sets the message associated with the response.
          nullable: true
          type: string
        errors:
          description: Gets or sets the list of error details for individual fields.
          items:
            $ref: '#/components/schemas/ErrorDetail'
          nullable: true
          type: array
        errorCode:
          description: Gets or sets the error code associated with the error.
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ScoreCardDTO:
      example:
        jobId: jobId
        interviewId: interviewId
        id: id
        candidateId: candidateId
        overallFeedbackDecision: overallFeedbackDecision
        overallComments: overallComments
        feedbackSubmittedByName: feedbackSubmittedByName
        sections:
        - sectionName: sectionName
          skillScore: skillScore
          sectionComments: sectionComments
          skillTitle: skillTitle
        - sectionName: sectionName
          skillScore: skillScore
          sectionComments: sectionComments
          skillTitle: skillTitle
        stageId: stageId
      properties:
        id:
          nullable: true
          type: string
        jobId:
          nullable: true
          type: string
        candidateId:
          nullable: true
          type: string
        stageId:
          nullable: true
          type: string
        interviewId:
          nullable: true
          type: string
        overallFeedbackDecision:
          nullable: true
          type: string
        overallComments:
          nullable: true
          type: string
        feedbackSubmittedByName:
          nullable: true
          type: string
        sections:
          items:
            $ref: '#/components/schemas/ScorecardSectionDTO'
          nullable: true
          type: array
      type: object
    ScorecardSectionDTO:
      example:
        sectionName: sectionName
        skillScore: skillScore
        sectionComments: sectionComments
        skillTitle: skillTitle
      properties:
        sectionName:
          nullable: true
          type: string
        skillTitle:
          nullable: true
          type: string
        skillScore:
          nullable: true
          type: string
        sectionComments:
          nullable: true
          type: string
      type: object
    Tag:
      example:
        identifier: identifier
        name: name
        description: description
      properties:
        description:
          nullable: true
          type: string
        identifier:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    TalentPoolApplicationFieldsDTO:
      example:
        fieldName: fieldName
        isSystemDefined: true
        fieldOptions:
        - id: id
          value: value
        - id: id
          value: value
        id: id
        fieldType: null
        required: true
      properties:
        fieldName:
          description: Gets or sets the name of the field.
          nullable: true
          type: string
        required:
          description: Gets or sets a value indicating whether this Keka.Hire.Core.Entities.Field
            is required.
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        isSystemDefined:
          description: Gets or sets a value indicating whether this field is system
            generated.
          type: boolean
        fieldOptions:
          description: Gets or sets the field options.
          items:
            $ref: '#/components/schemas/FieldOptionDTO'
          nullable: true
          type: array
        id:
          description: Gets or sets the identifier
          nullable: true
          type: string
      type: object
    TalentPoolCandidateDTO:
      example:
        skills:
        - skills
        - skills
        firstName: firstName
        lastName: lastName
        educationDetails:
        - dateOfJoining: dateOfJoining
          university: university
          degree: degree
          location: location
          branch: branch
          dateOfCompletion: dateOfCompletion
        - dateOfJoining: dateOfJoining
          university: university
          degree: degree
          location: location
          branch: branch
          dateOfCompletion: dateOfCompletion
        gender: null
        phone: phone
        additionalCandidateDetails:
          key: additionalCandidateDetails
        experienceDetails:
        - isCurrentlyWorking: true
          dateOfJoining: dateOfJoining
          companyName: companyName
          location: location
          designation: designation
          dateOfRelieving: dateOfRelieving
        - isCurrentlyWorking: true
          dateOfJoining: dateOfJoining
          companyName: companyName
          location: location
          designation: designation
          dateOfRelieving: dateOfRelieving
        middleName: middleName
        id: id
        talentPoolDetails:
          key: talentPoolDetails
        email: email
      properties:
        id:
          nullable: true
          type: string
        firstName:
          description: Gets or sets the first name.
          nullable: true
          type: string
        lastName:
          description: Gets or sets the last name.
          nullable: true
          type: string
        middleName:
          description: Gets or sets the middle name.
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        email:
          description: Gets or sets the email.
          nullable: true
          type: string
        phone:
          description: Gets or sets the phone
          nullable: true
          type: string
        educationDetails:
          description: Gets or sets the education details.
          items:
            $ref: '#/components/schemas/EducationDTO'
          nullable: true
          type: array
        experienceDetails:
          description: Gets or sets the experience details.
          items:
            $ref: '#/components/schemas/ExperienceDTO'
          nullable: true
          type: array
        skills:
          description: Gets or sets the skills.
          items:
            type: string
          nullable: true
          type: array
        additionalCandidateDetails:
          additionalProperties:
            type: string
          nullable: true
          type: object
        talentPoolDetails:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    TalentPoolDTO:
      example:
        addedBy: addedBy
        name: name
        id: id
        addedOn: addedOn
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        addedBy:
          nullable: true
          type: string
        addedOn:
          nullable: true
          type: string
      type: object
    TimeDTO:
      example:
        hours: 0
        minutes: 6
      properties:
        hours:
          description: Gets or sets the hours.
          format: int32
          type: integer
        minutes:
          description: Gets or sets the minutes.
          format: int32
          type: integer
      type: object
    CustomFormField:
      properties:
        question:
          nullable: true
          type: string
        answer:
          nullable: true
          type: string
        multipleAnswers:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
      type: object
    JobType:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ReplacementEmployee:
      example:
        replacementReason: null
        employeeId: employeeId
      properties:
        employeeId:
          nullable: true
          type: string
        replacementReason:
          $ref: '#/components/schemas/ReplacementReason'
      type: object
    ReplacementReason:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      format: int32
      type: integer
    RequisitionReplacementEmployee:
      properties:
        employeeId:
          format: int32
          type: integer
        replacementReason:
          $ref: '#/components/schemas/ReplacementReason'
      type: object
    RequisitionRequest:
      example:
        requisitionFor: requisitionFor
        openPositions: 0
        additionalFields:
        - id: id
          title: title
          type: type
          value: value
        - id: id
          title: title
          type: type
          value: value
        toBeReplaced:
        - replacementReason: null
          employeeId: employeeId
        - replacementReason: null
          employeeId: employeeId
        isArchived: true
        subDepartment: subDepartment
        targetHiringDate: 2000-01-23T04:56:07.000+00:00
        isPriority: true
        requestedBy: requestedBy
        additionalComments: additionalComments
        requisitionTypes:
        - 1
        - 1
        requestedOn: 2000-01-23T04:56:07.000+00:00
        locations:
        - locations
        - locations
        hired: 6
        id: id
        department: department
        jobType: null
        jobNumber: jobNumber
        status: null
        budget: budget
      properties:
        id:
          nullable: true
          type: string
        requisitionFor:
          nullable: true
          type: string
        jobNumber:
          nullable: true
          type: string
        department:
          nullable: true
          type: string
        subDepartment:
          nullable: true
          type: string
        requestedBy:
          nullable: true
          type: string
        requestedOn:
          format: date-time
          type: string
        locations:
          items:
            type: string
          nullable: true
          type: array
        status:
          $ref: '#/components/schemas/RequisitionRequestStatus'
        isPriority:
          type: boolean
        budget:
          nullable: true
          type: string
        openPositions:
          format: int32
          type: integer
        hired:
          format: int32
          nullable: true
          type: integer
        requisitionTypes:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        toBeReplaced:
          items:
            $ref: '#/components/schemas/ReplacementEmployee'
          nullable: true
          type: array
        jobType:
          $ref: '#/components/schemas/JobType'
        targetHiringDate:
          format: date-time
          nullable: true
          type: string
        isArchived:
          type: boolean
        additionalComments:
          nullable: true
          type: string
        additionalFields:
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
          type: array
      type: object
    RequisitionRequestPagedResponse:
      description: class represents paged response.
      example:
        totalRecords: 7
        pageNumber: 5
        previousPage: https://openapi-generator.tech
        data:
        - requisitionFor: requisitionFor
          openPositions: 0
          additionalFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          toBeReplaced:
          - replacementReason: null
            employeeId: employeeId
          - replacementReason: null
            employeeId: employeeId
          isArchived: true
          subDepartment: subDepartment
          targetHiringDate: 2000-01-23T04:56:07.000+00:00
          isPriority: true
          requestedBy: requestedBy
          additionalComments: additionalComments
          requisitionTypes:
          - 1
          - 1
          requestedOn: 2000-01-23T04:56:07.000+00:00
          locations:
          - locations
          - locations
          hired: 6
          id: id
          department: department
          jobType: null
          jobNumber: jobNumber
          status: null
          budget: budget
        - requisitionFor: requisitionFor
          openPositions: 0
          additionalFields:
          - id: id
            title: title
            type: type
            value: value
          - id: id
            title: title
            type: type
            value: value
          toBeReplaced:
          - replacementReason: null
            employeeId: employeeId
          - replacementReason: null
            employeeId: employeeId
          isArchived: true
          subDepartment: subDepartment
          targetHiringDate: 2000-01-23T04:56:07.000+00:00
          isPriority: true
          requestedBy: requestedBy
          additionalComments: additionalComments
          requisitionTypes:
          - 1
          - 1
          requestedOn: 2000-01-23T04:56:07.000+00:00
          locations:
          - locations
          - locations
          hired: 6
          id: id
          department: department
          jobType: null
          jobNumber: jobNumber
          status: null
          budget: budget
        firstPage: https://openapi-generator.tech
        lastPage: https://openapi-generator.tech
        nextPage: https://openapi-generator.tech
        totalPages: 2
        pageSize: 5
        message: message
        errors:
        - errors
        - errors
        succeeded: true
      properties:
        succeeded:
          description: Gets or sets a value indicating whether this Keka.API.Web.Core.Response`1
            is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          nullable: true
          type: string
        errors:
          description: Gets or sets the errors.
          items:
            type: string
          nullable: true
          type: array
        data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/RequisitionRequest'
          nullable: true
          type: array
        pageNumber:
          description: Gets or sets the page number.
          format: int32
          type: integer
        pageSize:
          description: Gets or sets the size of the page.
          format: int32
          type: integer
        firstPage:
          description: Gets or sets the first page.
          format: uri
          nullable: true
          type: string
        lastPage:
          description: Gets or sets the last page.
          format: uri
          nullable: true
          type: string
        totalPages:
          description: Gets or sets the total pages.
          format: int32
          type: integer
        totalRecords:
          description: Gets or sets the total records.
          format: int32
          type: integer
        nextPage:
          description: Gets or sets the next page.
          format: uri
          nullable: true
          type: string
        previousPage:
          description: Gets or sets the previous page.
          format: uri
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    RequisitionRequestStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    AuthenticationGetAccessTokenRequest:
      properties:
        grant_type:
          default: kekaapi
          example: kekaapi
          type: string
          x-konfig-original-example: kekaapi
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenRequest-properties-grant_type
        scope:
          default: kekaapi
          example: kekaapi
          type: string
          x-konfig-original-example: kekaapi
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenRequest-properties-scope
        client_id:
          type: string
        client_secret:
          type: string
        api_key:
          type: string
      required:
      - api_key
      - client_id
      - client_secret
      - grant_type
      - scope
      type: object
    PayCyclesUpdatePaymentsStatusRequest:
      items:
        $ref: '#/components/schemas/PaymentTransaction'
      type: array
    PayCyclesUpdatePaymentsStatusRequest1:
      items:
        $ref: '#/components/schemas/PaymentTransaction'
      type: array
    PayCyclesUpdatePaymentsStatusRequest2:
      items:
        $ref: '#/components/schemas/PaymentTransaction'
      type: array
    PayCyclesUpdatePaymentsStatusRequest3:
      items:
        $ref: '#/components/schemas/PaymentTransaction'
      type: array
    JobsUpdateCandidateRequest:
      additionalProperties: {}
      type: object
    JobsUpdateCandidateRequest1:
      additionalProperties: {}
      type: object
    JobsUpdateCandidateRequest2:
      additionalProperties: {}
      type: object
    JobsUpdateCandidateRequest3:
      additionalProperties: {}
      type: object
    JobsPostCandidateRequest:
      additionalProperties: {}
      type: object
    JobsPostCandidateRequest1:
      additionalProperties: {}
      type: object
    JobsPostCandidateRequest2:
      additionalProperties: {}
      type: object
    JobsPostCandidateRequest3:
      additionalProperties: {}
      type: object
    TalentPoolAddCandidateRequest:
      additionalProperties: {}
      type: object
    TalentPoolAddCandidateRequest1:
      additionalProperties: {}
      type: object
    TalentPoolAddCandidateRequest2:
      additionalProperties: {}
      type: object
    TalentPoolAddCandidateRequest3:
      additionalProperties: {}
      type: object
    AuthenticationGetAccessTokenResponse:
      example:
        access_token: eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ
        scope: kekaapi
        token_type: Bearer
        expires_in: 86400
      properties:
        access_token:
          example: eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ
          type: string
          x-konfig-original-example: eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-access_token
        expires_in:
          default: 0
          example: 86400
          type: integer
          x-konfig-original-example: 86400
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-expires_in
        token_type:
          example: Bearer
          type: string
          x-konfig-original-example: Bearer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-token_type
        scope:
          example: kekaapi
          type: string
          x-konfig-original-example: kekaapi
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-scope
      type: object
      x-konfig-is-used-in-successful-response: true
    AuthenticationGetAccessToken400Response:
      properties:
        error:
          example: unsupported_grant_type
          type: string
          x-konfig-original-example: unsupported_grant_type
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessToken400Response-properties-error
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    JobsGetAllPublishedJobsResponse:
      items:
        $ref: '#/components/schemas/JobDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetAllPublishedJobs200Response:
      items:
        $ref: '#/components/schemas/JobDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetApplicationFieldsResponse:
      items:
        $ref: '#/components/schemas/JobApplicationFieldsDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetApplicationFields200Response:
      items:
        $ref: '#/components/schemas/JobApplicationFieldsDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetCandidatesResponse:
      items:
        $ref: '#/components/schemas/JobCandidateDetailsDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetCandidates200Response:
      items:
        $ref: '#/components/schemas/JobCandidateDetailsDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsUpdateCandidateResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    JobsUpdateCandidate200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    JobsAddCandidateNoteResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    JobsAddCandidateNote200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    JobsPostCandidateResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    JobsPostCandidate200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    JobsGetCandidateInterviewsResponse:
      items:
        $ref: '#/components/schemas/InterviewDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetCandidateInterviews200Response:
      items:
        $ref: '#/components/schemas/InterviewDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetCandidateScorecardsResponse:
      items:
        $ref: '#/components/schemas/ScoreCardDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsGetCandidateScorecards200Response:
      items:
        $ref: '#/components/schemas/ScoreCardDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    TalentPoolGetAllResponse:
      items:
        $ref: '#/components/schemas/TalentPoolDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    TalentPoolGetAll200Response:
      items:
        $ref: '#/components/schemas/TalentPoolDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    TalentPoolGetApplicationFieldsResponse:
      items:
        $ref: '#/components/schemas/TalentPoolApplicationFieldsDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    TalentPoolGetApplicationFields200Response:
      items:
        $ref: '#/components/schemas/TalentPoolApplicationFieldsDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    TalentPoolGetCandidatesResponse:
      items:
        $ref: '#/components/schemas/TalentPoolCandidateDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    TalentPoolGetCandidates200Response:
      items:
        $ref: '#/components/schemas/TalentPoolCandidateDTO'
      type: array
      x-konfig-is-used-in-successful-response: true
    TalentPoolAddCandidateResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    TalentPoolAddCandidate200Response:
      type: string
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-servers-0-variables-environment:
      example: keka
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--hris-employees-get-parameters-3-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--hris-employees-get-parameters-4-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--v1-hire-jobs-jobId-candidates-get-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenRequest-properties-grant_type:
      example: kekaapi
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenRequest-properties-scope:
      example: kekaapi
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-access_token:
      example: eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-expires_in:
      example: 86400
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-token_type:
      example: Bearer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenResponse-properties-scope:
      example: kekaapi
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AuthenticationGetAccessToken400Response-properties-error:
      example: unsupported_grant_type
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-post--connect-token:
      properties:
        grant_type:
          default: kekaapi
          example: kekaapi
          type: string
          x-konfig-original-example: kekaapi
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenRequest-properties-grant_type
        scope:
          default: kekaapi
          example: kekaapi
          type: string
          x-konfig-original-example: kekaapi
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AuthenticationGetAccessTokenRequest-properties-scope
        client_id:
          type: string
        client_secret:
          type: string
        api_key:
          type: string
      required:
      - api_key
      - client_id
      - client_secret
      - grant_type
      - scope
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--hris-employees:
      properties:
        employeeIds:
          type: string
        employeeNumbers:
          type: string
        employmentStatus:
          type: string
        inProbation:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--hris-employees-get-parameters-3-schema
        inNoticePeriod:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--hris-employees-get-parameters-4-schema
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeIds
      - employeeNumbers
      - employmentStatus
      - inProbation
      - inNoticePeriod
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-post--hris-employees:
      properties:
        employeeNumber:
          nullable: true
          type: string
        displayName:
          type: string
        firstName:
          type: string
        middleName:
          nullable: true
          type: string
        lastName:
          type: string
        email:
          format: email
          type: string
        mobileNumber:
          format: tel
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          format: date-time
          type: string
        dateJoined:
          format: date-time
          type: string
        department:
          type: string
        businessUnit:
          type: string
        jobTitle:
          type: string
        secondaryJobTitle:
          nullable: true
          type: string
        location:
          type: string
      required:
      - businessUnit
      - dateJoined
      - dateOfBirth
      - department
      - displayName
      - email
      - firstName
      - gender
      - jobTitle
      - lastName
      - location
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--hris-employees-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--hris-employees-id-personaldetails:
      properties:
        id:
          type: string
        displayName:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        middleName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          format: date-time
          nullable: true
          type: string
        workPhone:
          format: tel
          nullable: true
          type: string
        homePhone:
          format: tel
          nullable: true
          type: string
        personalEmail:
          format: email
          nullable: true
          type: string
        skypeId:
          nullable: true
          type: string
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        marriageDate:
          format: date-time
          nullable: true
          type: string
        relations:
          items:
            $ref: '#/components/schemas/Relation'
          nullable: true
          type: array
        bloodGroup:
          $ref: '#/components/schemas/BloodGroup'
        currentAddress:
          $ref: '#/components/schemas/Address'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        professionalSummary:
          nullable: true
          type: string
        customFields:
          additionalProperties:
            nullable: true
          nullable: true
          type: object
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--hris-employees-id-jobdetails:
      properties:
        id:
          type: string
        employeeNumber:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
        businessUnit:
          nullable: true
          type: string
        department:
          nullable: true
          type: string
        jobTitle:
          nullable: true
          type: string
        reportingManager:
          nullable: true
          type: string
        attendanceNumber:
          nullable: true
          type: string
        timeType:
          $ref: '#/components/schemas/TimeType'
        attendanceCaptureScheme:
          nullable: true
          type: string
        expensePolicy:
          nullable: true
          type: string
        noticePeriod:
          nullable: true
          type: string
        holidayList:
          nullable: true
          type: string
        costCenter:
          nullable: true
          type: string
        payBand:
          nullable: true
          type: string
        payGrade:
          nullable: true
          type: string
        customFields:
          additionalProperties:
            nullable: true
          nullable: true
          type: object
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--hris-employees-updatefields:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--hris-groups:
      properties:
        groupTypeIds:
          type: string
        systemGroupTypes:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - groupTypeIds
      - systemGroupTypes
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--hris-grouptypes:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--hris-departments:
      properties:
        departmentIds:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - departmentIds
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--hris-locations:
      properties:
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--hris-jobtitles:
      properties:
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--hris-currencies:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--hris-noticeperiods:
      properties:
        noticePeriodIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - noticePeriodIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--time-leavetypes:
      properties:
        leaveTypeIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - leaveTypeIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--time-leavebalance:
      properties:
        employeeIds:
          type: string
        leaveTypeIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeIds
      - leaveTypeIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--time-leaverequests:
      properties:
        employeeIds:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeIds
      - from
      - to
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-post--time-leaverequests:
      properties:
        employeeId:
          type: string
        requestedBy:
          type: string
        fromDate:
          format: date-time
          type: string
        toDate:
          format: date-time
          type: string
        fromSession:
          $ref: '#/components/schemas/SessionType'
        toSession:
          $ref: '#/components/schemas/SessionType'
        leaveTypeId:
          type: string
        reason:
          type: string
        note:
          nullable: true
          type: string
      required:
      - employeeId
      - fromDate
      - leaveTypeId
      - reason
      - requestedBy
      - toDate
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--time-attendance:
      properties:
        employeeIds:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employeeIds
      - from
      - to
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--time-capturescheme:
      properties:
        captureschemeIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - captureschemeIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--time-holidayscalendar:
      properties:
        holidaysCalendarIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - holidaysCalendarIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--payroll-salarycomponents:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--payroll-paygroups:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles:
      properties:
        payGroupId:
          type: string
        runStatus:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - payGroupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payGroupId
      - runStatus
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles-payCycleId-payregister:
      properties:
        payGroupId:
          type: string
        payCycleId:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - payCycleId
      - payGroupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payGroupId
      - payCycleId
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles-payCycleId-paybatches:
      properties:
        payGroupId:
          type: string
        payCycleId:
          type: string
        status:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - payCycleId
      - payGroupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payGroupId
      - payCycleId
      - status
      - pageNumber
      - pageSize
    ? konfig-generated-schema-single-parameter-schema-get--payroll-paygroups-payGroupId-paycycles-payCycleId-paybatches-payBatchId-payments
    : properties:
        payGroupId:
          type: string
        payCycleId:
          type: string
        payBatchId:
          type: string
        status:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - payBatchId
      - payCycleId
      - payGroupId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payGroupId
      - payCycleId
      - payBatchId
      - status
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--payroll-paygrades:
      properties:
        payGradeIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payGradeIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--payroll-paybands:
      properties:
        payBandIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payBandIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--psa-clients:
      properties:
        clientIds:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - clientIds
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-post--psa-clients:
      properties:
        description:
          nullable: true
          type: string
        name:
          type: string
        code:
          type: string
        billingInfo:
          $ref: '#/components/schemas/BillingInfo'
        phone:
          format: tel
          nullable: true
          type: string
        website:
          nullable: true
          type: string
        email:
          format: email
          nullable: true
          type: string
      required:
      - code
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--psa-clients-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--psa-clients-id:
      properties:
        id:
          type: string
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--psa-projects-projectId-phases:
      properties:
        projectId:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - projectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - projectId
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-post--psa-projects-projectId-phases:
      properties:
        projectId:
          type: string
        phaseName:
          type: string
      required:
      - projectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - projectId
      - phaseName
    konfig-generated-schema-single-parameter-schema-get--psa-projects:
      properties:
        clientIds:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - clientIds
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-post--psa-projects:
      properties:
        description:
          nullable: true
          type: string
        clientId:
          type: string
        name:
          type: string
        code:
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        isBillable:
          type: boolean
      required:
      - clientId
      - code
      - endDate
      - name
      - startDate
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--psa-projects-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--psa-projects-id:
      properties:
        id:
          type: string
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        isBillable:
          nullable: true
          type: boolean
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--psa-projects-id-allocations:
      properties:
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--psa-projects-id-timeentries:
      properties:
        id:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        employeeIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
      - from
      - to
      - employeeIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--psa-projects-projectId-tasks:
      properties:
        projectId:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - projectId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - projectId
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-put--psa-projects-projectId-tasks-taskId:
      properties:
        projectId:
          type: string
        taskId:
          type: string
        description:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        taskBillingType:
          $ref: '#/components/schemas/TaskBillingType'
        assignedTo:
          items:
            type: string
          nullable: true
          type: array
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        estimatedHours:
          format: double
          nullable: true
          type: number
        phaseId:
          nullable: true
          type: string
      required:
      - projectId
      - taskId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - projectId
      - taskId
    konfig-generated-schema-single-parameter-schema-get--psa-projects-projectId-tasks-taskId-timeentries:
      properties:
        projectId:
          type: string
        taskId:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        employeeIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - projectId
      - taskId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - projectId
      - taskId
      - from
      - to
      - employeeIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--psa-timeentries:
      properties:
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        employeeIds:
          type: string
        projectIds:
          type: string
        taskIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - from
      - to
      - employeeIds
      - projectIds
      - taskIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--pms-timeframes:
      properties:
        timeFrameIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - timeFrameIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--pms-goals:
      properties:
        goalIds:
          type: string
        timeFrameIds:
          type: string
        employeeIds:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - goalIds
      - timeFrameIds
      - employeeIds
      - from
      - to
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-put--pms-goals-goalId-progress:
      properties:
        goalId:
          type: string
        currentValue:
          format: double
          type: number
        status:
          $ref: '#/components/schemas/GoalStatus'
        updatedBy:
          type: string
        note:
          nullable: true
          type: string
      required:
      - currentValue
      - goalId
      - status
      - updatedBy
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - goalId
    konfig-generated-schema-single-parameter-schema-get--pms-badges:
      properties:
        badgeIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - badgeIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--pms-praise:
      properties:
        praiseIds:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - praiseIds
      - from
      - to
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-post--pms-praise:
      properties:
        employeeIds:
          items:
            type: string
          type: array
        feedback:
          type: string
        badgeId:
          type: string
        givenBy:
          type: string
      required:
      - badgeId
      - employeeIds
      - feedback
      - givenBy
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs:
      properties:
        lastModified:
          format: date-time
          type: string
        JobStatus:
          format: int32
          type: integer
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - lastModified
      - JobStatus
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-applicationfields:
      properties:
        jobId:
          type: string
      required:
      - jobId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - jobId
    konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-candidates:
      properties:
        jobId:
          type: string
        isArchived:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-hire-jobs-jobId-candidates-get-parameters-1-schema
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - jobId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - jobId
      - isArchived
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-put--v1-hire-jobs-jobId-candidate-candidateId:
      properties:
        candidateId:
          type: string
        jobId:
          type: string
      required:
      - candidateId
      - jobId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - candidateId
      - jobId
    konfig-generated-schema-single-parameter-schema-post--v1-hire-jobs-jobId-candidate-candidateId-notes:
      properties:
        candidateId:
          type: string
        jobId:
          type: string
        tags:
          description: Gets or sets the candidate tags
          items:
            type: string
          nullable: true
          type: array
        comments:
          description: Gets or sets the commnet
          nullable: true
          type: string
      required:
      - candidateId
      - jobId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - candidateId
      - jobId
    konfig-generated-schema-single-parameter-schema-post--v1-hire-jobs-jobId-candidate:
      properties:
        jobId:
          type: string
      required:
      - jobId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - jobId
    konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-candidate-candidateId-interviews:
      properties:
        candidateId:
          type: string
        jobId:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - candidateId
      - jobId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - candidateId
      - jobId
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--v1-hire-jobs-jobId-candidate-candidateId-scorecards:
      properties:
        candidateId:
          type: string
        jobId:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - candidateId
      - jobId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - candidateId
      - jobId
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--v1-hire-talentpool:
      properties:
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--v1-hire-talentpool-talentPoolId-applicationfields:
      properties:
        talentPoolId:
          type: string
      required:
      - talentPoolId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - talentPoolId
    konfig-generated-schema-single-parameter-schema-get--v1-hire-talentpool-talentPoolId-candidates:
      properties:
        talentPoolId:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      required:
      - talentPoolId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - talentPoolId
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-post--v1-hire-talentpool-talentPoolId-candidate:
      properties:
        talentPoolId:
          type: string
      required:
      - talentPoolId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - talentPoolId
    konfig-generated-schema-single-parameter-schema-get--expense-categories:
      properties:
        expenseCategoryIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - expenseCategoryIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--expense-claims:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--expensepolicies:
      properties:
        expensepolicyIds:
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - expensepolicyIds
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--assets:
      properties:
        assetIds:
          type: string
        employeeIds:
          type: string
        assetStatus:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - assetIds
      - employeeIds
      - assetStatus
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--assets-types:
      properties:
        assetTypeIds:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - assetTypeIds
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--assets-categories:
      properties:
        assetCategoryIds:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - assetCategoryIds
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--assets-conditions:
      properties:
        assetConditionIds:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - assetConditionIds
      - lastModified
      - pageNumber
      - pageSize
    konfig-generated-schema-single-parameter-schema-get--requisition-requests:
      properties:
        requisitionRequestIds:
          type: string
        status:
          type: string
        lastModified:
          format: date-time
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - requisitionRequestIds
      - status
      - lastModified
      - pageNumber
      - pageSize
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes:
            kekaapi: Keka API
          tokenUrl: https://login.kekad.com/connect/token
        implicit:
          authorizationUrl: https://login.kekad.com/connect/authorize
          scopes:
            kekaapi: Keka API
      type: oauth2
      x-konfig-globally-required-security: true
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true

